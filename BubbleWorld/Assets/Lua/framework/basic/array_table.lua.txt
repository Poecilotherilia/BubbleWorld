---
--- Generated by lvyuqiang
--- File name : array_table.lua.txt
--- DateTime : 2021/04/16
--- Description : table array部分静态方法
---

local a_table = {}
local table = table

---移除table中的元素
---@public
---@param list table table
---@param value any 元素
---@return boolean
function a_table.remove(list, value)
    if list == nil or value == nil then
        return false
    end

    for i = #list, 1, -1 do
        if list[i] == value then
            table.remove(list, i)
            return true
        end
    end
    return false
end

---移除table中的元素
---@public
---@param list table table
---@param index number 元素
---@return boolean
function a_table.remove_at(list, index)
    if list == nil or index == nil then
        return false
    end

    local tmp = list[index]
    if nil ~= tmp then
        table.remove(list, index)
        return true
    end
    
    return false
end

---清理table
---@public
---@param list table table
---@return void
function a_table.clear(list)
    if list == nil then
        return
    end

    for i = 1, #list do
        list[i] = nil
    end
end

---table中是否包含指定的元素
---@public
---@param list table table
---@param value any 元素
---@return boolean
function a_table.contains(list, value)
    if list == nil or value == nil then
        return false
    end

    for i = 1, #list do
        if list[i] == value then
            return true
        end
    end
    return false
end

---获取索引
---@public
---@param list table table
---@param value any 元素
---@return number
function a_table.index_of(list, value)
    if list == nil or value == nil then
        return nil
    end
    for i, v in ipairs(list) do
        if v == value then
            return i
        end
    end
    return nil
end

---向table末尾添加元素
---@public
---@param list table table
---@param value any 元素
---@return void
function a_table.insert(list, value)
    if list == nil or value == nil then
        return false
    end
    list[#list + 1] = value
    return true
end

---数组翻转
---@public
---@param list table
---@return table
function a_table.reverse(list)
    local tmp = {}
    for i = 1, #list do
        local index = #list
        local v = table.remove(list, index)
        tmp[i] = v
    end
    return tmp
end

---数组合并
---@public
function a_table.add_range(source_tab, add_tab, index)
    if nil == source_tab then
        return add_tab
    end
    if nil == add_tab then
        return source_tab
    end
    for i, v in ipairs(add_tab) do
        if nil == index or index >= #source_tab then
            table.insert(source_tab, v)
        else
            table.insert(source_tab, index + i - 1, v)
        end
    end
end

array_table = a_table