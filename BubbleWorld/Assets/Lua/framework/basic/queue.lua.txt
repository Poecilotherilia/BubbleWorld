---
--- Generated by wuhaijun
--- File name : queue.lua.txt
--- DateTime : 2021/03/19
--- Description : 队列
---

local table_remove = table.remove

---@class queue
local queue = {}
queue.__index = queue

---@public
---@return queue
function queue.new(is_weak)
    local instance =
    {
        cname = "queue",
        array = {},
        size = 0,
    }
    if is_weak then
        setmetatable(instance.array, { __mode = "v" })
    end
    return setmetatable(instance, queue)
end

---将对象添加到队尾
---@public
---@param item any 对象
---@return nil
function queue:enqueue(item)
    if item == nil then return end

    self.size = self.size + 1
    self.array[self.size] = item
end

---移除并返回队首的对象
---@public
---@return any
function queue:dequeue()
    if self:count() == 0 then return nil end

    local item = table_remove(self.array, 1)
    if item ~= nil then
        self.size = self.size - 1
        return item
    end
    return nil
end

---是否包含对象
---@public
---@return boolean
---@param item any 对象
function queue:contains(item)
    local arr = self.array
    for i = 1, self:count() do
        if arr[i] == item then
            return true
        end
    end
    return false
end

---返回队首对象，但不移除
---@public
---@return any
function queue:peek()
    local count = self:count()
    if count == 0 then
        return nil
    end
    return self.array[1]
end

---包含的对象数量
---@public
---@return number
function queue:count()
    return self.size
end

---是否为空
---@public
---@return boolean
function queue:is_empty()
    return self:count() == 0
end

---获取元素在队列中的索引位置
---@public
---@param item any
---@return number
function queue:index_of(item)
    local index = -1
    if item == nil then
        return index
    end

    local arr = self.array
    for i = 1, self:count() do
        if arr[i] == item then
            index = i
        end
    end
    
    return index
end

---遍历队列
---@public
---@param action fun(item:any, ...) 遍历回调
---@vararg any
function queue:foreach(action, ...)
    for i = 1, self:count() do
        if action(self.array[i], ...) then
            break
        end
    end
end

---清理队列
---@public
function queue:clear()
    for i = 1, self.size do
        self.array[i] = nil
    end
    self.size = 0
end

---销毁
---@public
function queue:dispose()
    self:clear()
    self.array = nil
    self.size = nil
end

return queue