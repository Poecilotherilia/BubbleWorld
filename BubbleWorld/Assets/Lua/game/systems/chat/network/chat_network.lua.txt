---
--- Generated by libin
--- File name : chat_network.lua.txt
--- DataTime : 2022/12/09
--- Description : 
---

local message = message
---@type message_type
local message_type = enum.message_type
local net_mgr = network
local message_names = message_names
local enum_proto = enum.proto
local EGameMsgID = enum_proto.EGameMsgID
local EGameEventCode = enum_proto.EGameEventCode
local chat_data = game_data_manager.chat
local message_box = message_box
local data = data
local tables = tables

---@class chat_network
local chat_network = class("chat_network")

--region base api

---构造方法
---@protected
function chat_network:ctor()
    self:add_listener()
end

---@public
function chat_network:dispose()
    self:remove_listener()
end

--endregion

--region listener

function chat_network:add_listener()
    net_mgr.add_message_listener(EGameMsgID.ACK_SDK_LOGIN_INFO_AND_CHATROOM, message_names.AckSdkLoginInfoAndChatroom, self.on_ack_sdk_logic_info_and_chat_room, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_REPORT_CHAT_PLAYER, message_names.AckReportChatPlayer, self.on_ack_report_chat_player, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_REGISTER_CHAT_SDK_ACCOUNT, message_names.AckRegisterChatSdkAccount, self.on_ack_register_chat_sdk_account, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_SWITCH_CHAT_BUBBLE, message_names.AckSwitchChatBubble, self.on_ack_switch_chat_bubble, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_MEME_GROUP, message_names.AckUnlockChatMemeGroup, self.on_ack_un_lock_chat_meme_group, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_MEME, message_names.AckUnlockChatMeme, self.on_ack_un_lock_chat_meme, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_BUBBLE, message_names.AckUnlockChatBubble, self.on_ack_un_lock_chat_bubble, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_CREATE_CHAT_GROUP, message_names.AckCreateChatGroup, self.on_ack_create_chat_group, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_ADD_CHAT_GROUP_USER, message_names.AckAddChatGroupUser, self.on_ack_chat_group_user, self)

end

function chat_network:remove_listener()
    net_mgr.remove_message_listener(EGameMsgID.ACK_SDK_LOGIN_INFO_AND_CHATROOM, self.on_ack_sdk_logic_info_and_chat_room, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_REPORT_CHAT_PLAYER, self.on_ack_report_chat_player, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_REGISTER_CHAT_SDK_ACCOUNT, self.on_ack_register_chat_sdk_account, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_SWITCH_CHAT_BUBBLE, self.on_ack_switch_chat_bubble, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_MEME_GROUP, self.on_ack_un_lock_chat_meme_group, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_MEME, self.on_ack_un_lock_chat_meme, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_UNLOCK_CHAT_BUBBLE, self.on_ack_un_lock_chat_bubble, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_CREATE_CHAT_GROUP, self.on_ack_create_chat_group, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_ADD_CHAT_GROUP_USER, self.on_ack_chat_group_user, self)
end

--endregion

--region ack

---回复添加聊天群组成员
---@private
---@param ack_info AckAddChatGroupUser
function chat_network:on_ack_chat_group_user(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        if nil ~= ack_info.chat_group_id then
            chat_data:update_guild_channel_uid(ack_info.chat_group_id)
            ----加入战团聊天组
            --system_manager.chat:join_group(ack_info.chat_group_id)
        end
    end
end

---回复创建聊天群组
---@private
---@param ack_info AckCreateChatGroup
function chat_network:on_ack_create_chat_group(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        if nil ~= ack_info.chat_group_id then
            chat_data:update_guild_channel_uid(ack_info.chat_group_id)
            ----加入战团聊天组
            --system_manager.chat:join_group(ack_info.chat_group_id)
        end
    end
end

---回复个性化解锁
---@private
---@param ack_info AckUnlockChatBubble
function chat_network:on_ack_un_lock_chat_bubble(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        ---@type Bubble
        local bubble = data.get(tables.Bubble.name, ack_info.bubble_id)
        if nil ~= bubble then
            message_box.show_tip_by_id(tables.Prompt.ids.Prompt_BotArena_8)
        end

        message.broadcast(message_type.UI_CHAT_AFTER_CUSTOM_UN_LOCK, ack_info.bubble_id)
    end
end

---回复解锁聊天表情
---@private
---@param ack_info AckUnlockChatMeme
function chat_network:on_ack_un_lock_chat_meme(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        ---@type Meme
        local meme = data.get(tables.Meme.name, ack_info.meme_id)
        if nil ~= meme and meme.MemeUnlockType == 3 then
            message_box.show_tip_by_id(tables.Prompt.ids.Prompt_BotArena_8)
        end
        message.broadcast(message_type.UI_CHAT_AFTER_EXPRESSION_UN_LOCK, ack_info.meme_id)
    end
end

---回复解锁聊天表情组
---@private
---@param ack_info AckUnlockChatMemeGroup
function chat_network:on_ack_un_lock_chat_meme_group(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        ---@type MemeGroup
        local meme_group = data.get(tables.MemeGroup.name, ack_info.meme_group_id)
        if nil ~= meme_group then
            message_box.show_tip_by_id(tables.Prompt.ids.Prompt_BotArena_8)
        end

        message.broadcast(message_type.UI_CHAT_AFTER_EXPRESSION_PACK_UN_LOCK, ack_info.meme_group_id)
    end
end

---回复切换聊天气泡
---@private
---@param ack_info AckSwitchChatBubble
function chat_network:on_ack_switch_chat_bubble(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        message.broadcast(message_type.UI_CHAT_UPDATE_SELF_CUSTOM)
    end
end

---@private
---@param ack_info AckSdkLoginInfoAndChatroom
function chat_network:on_ack_sdk_logic_info_and_chat_room(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        chat_data:sync_chanel_data(ack_info)
    else
        log.error("on_ack_sdk_logic_info_and_chat_room error: ", ack_info.event_code)
    end
end

---@private
---@param ack_info AckReportChatPlayer
function chat_network:on_ack_report_chat_player(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end

---@private
---@param ack_info AckRegisterChatSdkAccount
function chat_network:on_ack_register_chat_sdk_account(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        chat_data:logic_sdk(ack_info.chat_sdk_passwd)
        --chat_data:set_sdk_password(ack_info.chat_sdk_passwd)
    end
end

--endregion

--region req

---登录请求聊天频道数据
---@public
function chat_network:req_sdk_logic_info_and_chat_room()
    ---@type ReqSdkLoginInfoAndChatroom
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()

    net_mgr.send_message_async(EGameMsgID.REQ_SDK_LOGIN_INFO_AND_CHATROOM, message_names.ReqSdkLoginInfoAndChatroom, req)
end

---举报玩家
---@public
---@param target_id Ident
---@param report_type number
---@param report_content string
function chat_network:req_report_chat_player(target_id, report_type, report_content)
    ---@type ReqReportChatPlayer
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.chat_player_id = target_id
    req.report_type = report_type
    req.report_content = report_content

    net_mgr.send_message_async(EGameMsgID.REQ_REPORT_CHAT_PLAYER, message_names.ReqReportChatPlayer, req)
end

---请求切换聊天气泡
---@public
---@param bubble_id string
function chat_network:req_switch_chat_bubble(bubble_id)
    ---@type ReqSwitchChatBubble
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.bubble_id = bubble_id

    net_mgr.send_message_async(EGameMsgID.REQ_SWITCH_CHAT_BUBBLE, message_names.ReqSwitchChatBubble, req)
end

---请求解锁聊天表情组
---@public
---@param group_id string
function chat_network:req_un_lock_chat_meme_group(group_id)
    ---@type ReqUnlockChatMemeGroup
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.meme_group_id = group_id

    net_mgr.send_message_async(EGameMsgID.REQ_UNLOCK_CHAT_MEME_GROUP, message_names.ReqUnlockChatMemeGroup, req)
end

---请求解锁聊天表情
---@public
---@param meme_id string
function chat_network:req_un_lock_chat_meme(meme_id)
    ---@type ReqUnlockChatMeme
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.meme_id = meme_id

    net_mgr.send_message_async(EGameMsgID.REQ_UNLOCK_CHAT_MEME, message_names.ReqUnlockChatMeme, req)
end

---请求解锁聊天气泡
---@public
---@param bubble_id string
function chat_network:req_un_lock_chat_bubble(bubble_id)
    ---@type ReqUnlockChatBubble
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.bubble_id = bubble_id

    net_mgr.send_message_async(EGameMsgID.REQ_UNLOCK_CHAT_BUBBLE, message_names.ReqUnlockChatBubble, req)
end

--endregion


return chat_network
