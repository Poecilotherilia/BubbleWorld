---
--- Generated by libin
--- File name : custom_str_format_system.lua.txt
--- DataTime : 2022/09/06
--- Description : 
---

local data = data
local tables = tables
local array_table = array_table
local format_type = enum.common.format_type
local skill_total_damage_rule = require "game/format/model/skill_total_damage_rule"
local skill_rate_rule_1 = require "game/format/model/skill_rate_rule_1"
local skill_rate_rule_2 = require "game/format/model/skill_rate_rule_2"
local skill_rate_rule_3 = require "game/format/model/skill_rate_rule_3"
local skill_rate_rule_4 = require "game/format/model/skill_rate_rule_4"
local skill_rate_rule_5 = require "game/format/model/skill_rate_rule_5"
local skill_rate_rule_9 = require "game/format/model/skill_rate_rule_9"
local skill_explain_rule = require "game/format/model/skill_explain_rule"
local skill_explain_rule_1 = require "game/format/model/skill_explain_rule_1"
local buff_rate_rule_1 = require "game/format/model/buff_rate_rule_1"
local buff_rate_rule_2 = require "game/format/model/buff_rate_rule_2"
local buff_rate_rule_3 = require "game/format/model/buff_rate_rule_3"
local buff_rate_rule_4 = require "game/format/model/buff_rate_rule_4"
local buff_rate_rule_5 = require "game/format/model/buff_rate_rule_5"
local buff_rate_rule_6 = require "game/format/model/buff_rate_rule_6"
local buff_explain_rule = require "game/format/model/buff_explain_rule"
local buff_explain_rule_1 = require "game/format/model/buff_explain_rule_1"
local skill_new_explain = require "game/format/skill/skill_new_explain"

---@class custom_str_format_system
local custom_str_format_system = class("custom_str_format_system")

--region base api

---构造方法
---@protected
function custom_str_format_system:ctor()
    ---@type table<number, str_format_rule>
    self.format_rule_dict = nil
    self:init()
end

---@public
function custom_str_format_system:dispose()
    self.format_rule_dict = nil
end

--endregion

--region logic

function custom_str_format_system:init()
    self.format_rule_dict = {}
    local total_damage_rule = skill_total_damage_rule.new()
    self.format_rule_dict[format_type.SKILL_TOTAL_DAMAGE] = total_damage_rule
    local rate_rule_1 = skill_rate_rule_1.new()
    self.format_rule_dict[format_type.SKILL_RATE_1] = rate_rule_1
    local rate_rule_2 = skill_rate_rule_2.new()
    self.format_rule_dict[format_type.SKILL_RATE_2] = rate_rule_2
    local rate_rule_3 = skill_rate_rule_3.new()
    self.format_rule_dict[format_type.SKILL_RATE_3] = rate_rule_3
    local rate_rule_4 = skill_rate_rule_4.new()
    self.format_rule_dict[format_type.SKILL_RATE_4] = rate_rule_4
    local rate_rule_5 = skill_rate_rule_5.new()
    self.format_rule_dict[format_type.SKILL_RATE_5] = rate_rule_5
    local rate_rule_9 = skill_rate_rule_9.new()
    self.format_rule_dict[format_type.SKILL_RATE_9] = rate_rule_9
    local s_explain_rule = skill_explain_rule.new()
    self.format_rule_dict[format_type.SKILL_EXPLAIN] = s_explain_rule
    local s_explain_rule_1 = skill_explain_rule_1.new()
    self.format_rule_dict[format_type.SKILL_EXPLAIN_1] = s_explain_rule_1
    local buff_rule_1 = buff_rate_rule_1.new()
    self.format_rule_dict[format_type.BUFF_RATE_1] = buff_rule_1
    local buff_rule_2 = buff_rate_rule_2.new()
    self.format_rule_dict[format_type.BUFF_RATE_2] = buff_rule_2
    local buff_rule_3 = buff_rate_rule_3.new()
    self.format_rule_dict[format_type.BUFF_RATE_3] = buff_rule_3
    local buff_rule_4 = buff_rate_rule_4.new()
    self.format_rule_dict[format_type.BUFF_RATE_4] = buff_rule_4
    local buff_rule_5 = buff_rate_rule_5.new()
    self.format_rule_dict[format_type.BUFF_RATE_5] = buff_rule_5
    local buff_rule_6 = buff_rate_rule_6.new()
    self.format_rule_dict[format_type.BUFF_RATE_6] = buff_rule_6
    local b_explain_rule = buff_explain_rule.new()
    self.format_rule_dict[format_type.BUFF_EXPLAIN] = b_explain_rule
    local b_explain_rule_1 = buff_explain_rule_1.new()
    self.format_rule_dict[format_type.BUFF_EXPLAIN_1] = b_explain_rule_1
end

---格式化
---@public
---@param type number
---@param metadata any
---@param param any
function custom_str_format_system:get_format(type, metadata, param)
    if nil ~= self.format_rule_dict[type] then
        return self.format_rule_dict[type]:format(metadata, param)
    end
    
    return nil
end

---@public
---@param type format_type
---@return str_format_rule
function custom_str_format_system:get_rule(type)
    if nil ~= self.format_rule_dict[type] then
        return self.format_rule_dict[type]
    end
    return nil
end

---生成名词解释
---@public
---@param origen_label string
---@param dict table<string, skill_new_explain>
---@param explain_types table<string, format_type>
---@return string
function custom_str_format_system:generate_explains(origen_label, dict, explain_types)
    local format_label = origen_label
    --for k in string.gmatch("AAA{BB}A{CC}A", "{.-}") do
    for key in string.gmatch(origen_label, "{.-}") do
        local new_key = string.sub(key, 2, #key - 1)
        local format_str
        if data.is_name(new_key, tables.BTLAns.name) then
            if dict[new_key] == nil then
                dict[new_key] = skill_new_explain.new()
                ---@type BTLAns
                local ans_data = data.get(tables.BTLAns.name, new_key)
                dict[new_key].name = ans_data.Name
                local str_a = string.split(ans_data.Desc, "|")
                local desc_list = {}
                for i = 1, #str_a do
                    local format_desc = self:generate_explains(str_a[i], dict, explain_types)
                    array_table.insert(desc_list, format_desc)
                end
                dict[new_key].desc_list = desc_list
            end
            
            format_str = self:get_format(explain_types ~= null and explain_types[tables.BTLAns.name] or format_type.SKILL_EXPLAIN, nil, new_key)
        elseif data.is_name(new_key, tables.BTLBuff.name) then
            if dict[new_key] == nil then
                dict[new_key] = skill_new_explain.new()
                ---@type BTLBuff
                local buff_data = data.get(tables.BTLBuff.name, new_key)
                dict[new_key].name = buff_data.Name
                local str_a = string.split(buff_data.Desc, "|")
                local desc_list = {}
                for i = 1, #str_a do
                    local format_desc = self:generate_explains(str_a[i], dict, explain_types)
                    array_table.insert(desc_list, format_desc)
                end
                dict[new_key].desc_list = desc_list
            end
            
            format_str = self:get_format(explain_types ~= null and explain_types[tables.BTLBuff.name] or format_type.BUFF_EXPLAIN, nil, new_key)
        end
        if format_str ~= nil then
            format_label = string.gsub(format_label, key, format_str)
        end
    end
    return format_label
end


--endregion

return custom_str_format_system
