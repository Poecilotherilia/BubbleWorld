---
--- Generated by libin
--- File name : building_network.lua.txt
--- DataTime : 2023/11/16
--- Description : 
---

local net_mgr = network
local message_names = message_names
local enum_proto = enum.proto
local EGameMsgID = enum_proto.EGameMsgID
local EGameEventCode = enum_proto.EGameEventCode

---@class building_network
local building_network = class("building_network")

--region base api

---构造方法
---@protected
function building_network:ctor()
    self:add_listener()
end

---@public
function building_network:dispose()
    self:remove_listener()
end


--endregion

--region listener

function building_network:add_listener()
    net_mgr.add_message_listener(EGameMsgID.ACK_CHANGE_DECORATION, message_names.AckChangeDecoration, self.on_ack_change_decoration, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_BUY_PRODUCT, message_names.ACK_BUY_PRODUCT,self.on_ack_buy_product, self)
end

function building_network:remove_listener()
    net_mgr.remove_message_listener(EGameMsgID.ACK_GET_SHOP_PRODUCTS, self.on_ack_get_shop_products, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_BUY_PRODUCT, self.on_ack_buy_product, self)
end

--endregion

--region ack

---购买装饰品
---@private
---@param ack_info AckBuyProduct
function building_network:on_ack_buy_product(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        game_data_manager.building:on_buy_building(ack_info)
    end
end

---更换装饰ack
---@private
---@param ack_info AckChangeDecoration
function building_network:on_ack_change_decoration(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        ---@type building_part_data
        local part_data = game_data_manager.building:get_building_part_data(ack_info.decoration_id)
        if nil ~= part_data then
            system_manager.building:apply_building(part_data)
        end
    end
end

--endregion

--region req

---更换装饰req
---@public
---@param id string
function building_network:req_change_decoration(id)
    ---@type ReqChangeDecoration
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.decoration_id = id

    net_mgr.send_message_async(EGameMsgID.REQ_CHANGE_DECORATION, message_names.ReqChangeDecoration, req)
end

---请求红点req
---@public
---@param id string
function building_network:req_red_point_decoration(id)
    ---@type ReqRedPointDecoration
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.decoration_id = id

    net_mgr.send_message_async(EGameMsgID.REQ_RED_POINT_DECORATION, message_names.ReqRedPointDecoration, req)
end

---购买建筑物
---@public
---@param part_data building_part_data
function building_network:req_buy_building(part_data)
    ---@type ReqBuyProduct
    local req = {
        player_id = game_data_manager.player.player_uid,
        product_id = part_data:get_product_id(),
        shop_id = part_data.shop_id,
        count = 1
    }

    net_mgr.send_message_async(EGameMsgID.REQ_BUY_PRODUCT, message_names.ReqBuyProduct, req)
end

--endregion


return building_network