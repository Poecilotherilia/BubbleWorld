---
--- Generated by chenmingzhu
--- File name : housekeeper_controller.lua.txt
--- DateTime : 2022/09/01
--- Description : 管家角色控制
---

local talk_expression_asset = 'Assets/Art/Character/Common/Expression/expression_common_talk.asset'
local role_res_util = require 'game/utils/role_res_util'
local wwise_util = require 'game/utils/wwise_util/wwise_util'
local data = data
local tables = tables
local res = res
local log = log
local cs = cs
local GameObject = cs.GameObject
local string = string
local scene = scene
local dispatch_data = game_data_manager.dispatch
local game_scene_manager = game_scene_manager
local string_is_nil_or_empty = string.is_nil_or_empty
local Vector3 = cs.Vector3
local GameUnitLuaBehaviour = cs.GameUnitLuaBehaviour
local typeof = typeof
local table_is_table_nil_or_empty = table.is_table_nil_or_empty
--local audio_manager = audio_manager
local asset_type = df.enum.asset_type

local LuaUtil = cs.LuaUtil

local table_count = table.count
---@class housekeeper_controller
local housekeeper_controller = class("housekeeper_controller")

local obj_name = "housekeeper"
local born_point

---构造函数
---@private
function housekeeper_controller:ctor()
    local tag = data.get(tables.ConstClient.name, tables.ConstClient.ids.KW_HOUSEKEEPER_PARENT_TAG, tables.ConstClient.properties.String)
    self.parent_node_transform = GameObject.FindWithTag(tag).transform
    self.res_loader = res.create_res_loader()
    self.pool = res.create_res_pool(self.res_loader, self.parent_node_transform)
    local born_point_id = data.get(tables.ConstClient.name, tables.ConstClient.ids.KW_POINT_GENERAL, tables.ConstClient.properties.String)
    born_point = data.get(tables.Point.name, born_point_id)
    
    ---@type table<number, number>
    self.effect_cache_array = {}
end

---初始化管家模型
---@public
function housekeeper_controller:init_witch_model(role_res_id)
    self:preload_role_action(role_res_id)
    ---预加载表情
    ---@type DeusFramework.Expression.DfExpression
    self.expression_talk = res.load_assets_sync(talk_expression_asset, asset_type.scriptableobject, nil, self.res_loader, nil).Result
end

--region 预加载

---预加载模型和动作
---@public
function housekeeper_controller:preload_role_action(role_res_id)
    if string_is_nil_or_empty(role_res_id) then
        log.error("role res id is nil")
        return
    end
    -- todo cmz 卸载上一个模型和动作资源
    if self.role_res_go then
        res.unload_instance(self.role_res_go, self.res_loader, false)
        --self.pool:Clear()
        --self.res_loader:Dispose()
    end
    local go = role_res_util.load_role_res_sync(role_res_id, obj_name, self.parent_node_transform, nil, self.res_loader, self.pool)
    self.role_res_go = go
    -- 初始位置
    go.transform:SetLocalPosition(born_point.PositionX / 10000, (born_point.PositionY / 10000), born_point.PositionZ / 10000)
    go.transform:SetLocalRotation(born_point.RotationX / 10000, born_point.RotationY / 10000, born_point.RotationZ / 10000)
    go.transform:SetLocalScale(born_point.ScaleX / 10000, born_point.ScaleY / 10000, born_point.ScaleZ / 10000)
    system_manager.trigger:add_nav_mesh_obstacle(go)
    ---表情组件
    ---@type DeusFramework.Expression.DfExpressionComponent
    self.role_res_expression = go:GetOrAddComponent(typeof(cs.ExpressionComponent))

    ---预加载动作
    local role_res_data = data.get(tables.RoleRes.name, role_res_id)
    self.idle_action_id = role_res_data[tables.RoleRes.properties.ArderIdleAction]
    role_res_util.preload_action(self.idle_action_id, self.pool)
    self:unload_anim_effect()
    ---播放待机动作
    self.game_unit_behavior = go:GetComponent(typeof(GameUnitLuaBehaviour))
    self:play_idle_action()
    -- 预加载换装动作
    self.change_skin_action_id = nil
    local action_id = role_res_data[tables.RoleRes.properties.ChangeSkinsAction]
    if string_is_nil_or_empty(action_id) then
        log.error("action id is nil")
        return
    end
    self.change_skin_action_id = action_id
    self:preload_action(action_id)
end

---预加载动作
---@public
function housekeeper_controller:preload_action(action_id)
    if string_is_nil_or_empty(action_id) then
        log.error("action id is nil")
        return
    end
    role_res_util.preload_action(action_id, self.pool)
end

---预加载动作
---@public
function housekeeper_controller:preload_actions(action_ids)
    if table_is_table_nil_or_empty(action_ids) then
        log.error("action ids is nil")
        return
    end
    for i = 1, #action_ids do
        local action_id = action_ids[i]
        role_res_util.preload_action(action_id, self.pool)
    end
end

--endregion

---播放待机动作
---@public
function housekeeper_controller:play_idle_action()
    if not self.game_unit_behavior or not self.idle_action_id then
        log.error("play idle action failed")
        return
    end
    role_res_util.play_animation(self.game_unit_behavior, self.idle_action_id, 1, nil, self.res_loader, self.pool)
end

---播放换装动作
---@public
function housekeeper_controller:play_change_skin_action()
    if not self.game_unit_behavior or not self.change_skin_action_id then
        log.error("play change skin action failed")
        return
    end
    self:play_animation(self.change_skin_action_id)
end

---播放动作
---@public
function housekeeper_controller:play_animation(action_id, callback)
    self:unload_anim_effect()
    ---播放角色动作
    if not string_is_nil_or_empty(action_id) then
        role_res_util.play_animation(self.game_unit_behavior, action_id, 1, nil, self.res_loader, self.pool, function()
            self:play_idle_action()
            if callback then
                callback()
            end
        end)
        
        local eff_ids = data.get(tables.Action.name, action_id, tables.Action.properties.EffectId)
        if eff_ids and #eff_ids > 0 then
            for i, v in ipairs(eff_ids) do
                ---@type Effect
                local e_data = data.get(tables.Effect.name, v)

                ---@type UnityEngine.Transform
                local attack_point = self.game_unit_behavior:GetAttackPoint(e_data.HangingPointPath)
                if LuaUtil.IsNull(attack_point) then
                    attack_point = self.game_unit_behavior.transform
                end
                
                local e_id = effect.play_effect_async(v, attack_point.gameObject, 1, nil, nil)
                array_table.insert(self.effect_cache_array, e_id)
            end
        end
        
    else
        self:play_idle_action()
        if callback then
            callback()
        end
    end
    local voice_id = data.get(tables.Action.name, action_id, tables.Action.properties.TalkAudioId)
    ---播放角色语音
    if not string_is_nil_or_empty(voice_id) then
        ---结束语音
        if self.current_clip_voice_id then
            --audio_manager.stop_sound(self.current_clip_voice_id)
            wwise_util.stop_audio(self.current_clip_voice_id)
            self.current_clip_voice_id = nil
        end
        ---结束表情
        self.role_res_expression:Stop()
        --self.current_clip_voice_id = audio_manager.play_sound_async(voice_id, 1, function()
        --    self.expression_talk:Stop()
        --end)
        self.current_clip_voice_id = voice_id
        wwise_util.play_audio(voice_id, nil, function()
            self.role_res_expression:Stop()
        end)
        ---播放角色表情
        self.role_res_expression:Play(self.expression_talk)
    end
end

---获取父节点
---@public
function housekeeper_controller:get_parent_node()
    return self.parent_node_transform.gameObject
end

---卸载特效
---@private
function housekeeper_controller:unload_anim_effect()
    for i, v in ipairs(self.effect_cache_array) do
        effect.manual_unload_effect(v)
    end
end

---@public
function housekeeper_controller:dispose()
    self.pool:Clear()
    self.pool = nil
    self.res_loader:Dispose()
    self.res_loader = nil
    self.parent_node_transform = nil
    self.role_res_go = nil
    self.idle_action_id = nil
    self.change_skin_action_id = nil
    self.game_unit_behavior = nil
    self.last_role_res_go = nil
    self.last_idle_action_id = nil
    self.last_game_unit_behavior = nil
    self.current_clip_voice_id = nil
    self.expression_talk = nil
    self.role_res_expression = nil
end

return housekeeper_controller