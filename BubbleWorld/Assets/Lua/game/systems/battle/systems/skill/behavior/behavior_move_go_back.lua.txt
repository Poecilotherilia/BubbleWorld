---
--- Generated by wuhaijun
--- File name : behavior_move_go_back.lua.txt
--- DateTime : 2021/10/09
--- Description : 
---

---@type battle_helper
local helper = battle_helper
local is_nil_or_empty = string.is_nil_or_empty
---@type enum_battle
local enum_battle = enum.battle
local behavior_class_name = enum_battle.behavior_class_name
local camera_event_type = enum_battle.skill_camera_event_type

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type base_behavior
local super = require(helper.path.battle_skill .. 'behavior/base_behavior')

---@class behavior_move_go_back : base_behavior
local behavior_move_go_back = class("behavior_move_go_back", super)

---构造函数
---@protected
function behavior_move_go_back:ctor()
    super.ctor(self, self.cname)

    ---触发镜头事件
    ---@private
    ---@type fun(t:number)
    self.trigger_camera_event_callback = function(t) self:trigger_camera_event_handle(t) end
end

---行为开始，根据配置延迟后开始
---@protected
function behavior_move_go_back:on_start()
    ---@type move_go_back_data
    local data = self.behavior_data.behavior_args.MoveGoBackData
    self:log_assert(data ~= nil, "invalid MoveGoBackData")
    
    -- 如果返回动画存在则播放返回动画
    self:play_animation_handle(data.ActionName)
    -- 单位移动处理
    self:unit_go_back_handle(data.StartMoveTime, data.EndMoveTime, data.MovePosData)
end

---播放动作
---@private
---@param action_name string 动作名字
function behavior_move_go_back:play_animation_handle(action_name)
    if is_nil_or_empty(action_name) or action_name == 'None' then return end

    local entity = self:get_current_entity()
    self:log_info('skill play return action, eid = ', entity.eid, ', action_name = ', action_name)
    entity:replace_component(battle_components.unit_action, action_name)
end

---单位返回处理
---@private
---@param delay_time number
---@param duration_time number
---@param pos_data move_to_position_data
function behavior_move_go_back:unit_go_back_handle(delay_time, duration_time, pos_data)
    local class_name = behavior_class_name.MOVE_TO_POSITION
    local execute_eid = self:get_current_eid()
    
    ---@type skill_behavior_config_args
    local config_args = self.context:get_free_table("behavior_move_go_back.config_args")
    config_args.MoveToPositionData = pos_data

    self:generate_behavior(delay_time, duration_time, class_name, config_args, execute_eid)

    -- 触发镜头事件
    self.context.controller:add_timer(delay_time, self.trigger_camera_event_callback, duration_time - delay_time)
end

---触发镜头事件处理
---@private
---@param move_time number
function behavior_move_go_back:trigger_camera_event_handle(move_time)
    if move_time < 0 then
        move_time = 0
    end
    if self.skill_data ~= nil then
        self:set_camera_flow_handle(camera_event_type.BEGIN_GO_BACK, move_time)
    else
        helper.error_skill("请检查技能配置，是否返回时间大于结束时间")
    end
end

---销毁行为
---@protected
function behavior_move_go_back:on_dispose()
    self.trigger_camera_event_callback = nil
end

return behavior_move_go_back