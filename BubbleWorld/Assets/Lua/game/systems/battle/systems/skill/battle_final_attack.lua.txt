---
--- Generated by wuhaijun
--- File name : battle_final_attack.lua.txt
--- DateTime : 2023/09/04
--- Description : 最后一击处理
---

---@type battle_helper
local helper = battle_helper
local team_type_flag = enum.battle.team_type_flag

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class battle_final_attack : reactive_system
local battle_final_attack = class("battle_final_attack", super)

---构造函数
---@protected
---@param context context
function battle_final_attack:ctor(context)
    super.ctor(self, context)

    ---最后一集恢复时间
    ---@private
    ---@type fun(...)
    self.final_attack_recover_callback = function(...) self:on_final_attack_recover_handle(...) end
end

---初始化
---@protected
function battle_final_attack:initialize()
end

---获取触发配置
---@protected
---@param context context
---@return collector
function battle_final_attack:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.final_attack))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function battle_final_attack:filter(entity)
    return entity:has_component(battle_components.final_attack)
end

---组件变化时执行
---@protected
---@param entity_list entity[] 实体列表
---@param count number 列表长度
function battle_final_attack:executes(entity_list, count)
    for i = 1, count do
        self:on_final_attack_handle(entity_list[i])
    end
end

---最后一击处理
---@private
---@param skill_entity entity
function battle_final_attack:on_final_attack_handle(skill_entity)
    local context = self.context
    
    ---@type AckBTLEndInfo 检测是否有战斗结果数据
    local result_data = context.database:get_battle_result_data()
    if result_data == nil then return end

    ---@type number 最后一击表现时间
    local show_time = context.database:get_setting_const().KW_FINAL_ATTACK_DURACTION_TIME
    ---@type number 时间缩放值
    local time_scale = context.database:get_setting_const().KW_FINAL_ATTACK_GLOBAL_TIME_SCALE / 1000

    -- 整个战斗慢放
    if not skill_entity:has_component(battle_components.freeze_battle) then
        skill_entity:add_component(battle_components.freeze_battle, show_time, time_scale)
    end

    -- 获取胜利方
    local unit_info = context.database:get_unit_info_by_uid(result_data.victory_entity_id)
    local is_our_victory = false
    if unit_info ~= nil then
        is_our_victory = unit_info.team_type == team_type_flag.OWN
    end

    -- 慢放倒计时
    context.controller:add_timer_unscale(show_time, self.final_attack_recover_callback, is_our_victory)
    -- 同步最后一击开始事件
    context.message:send_final_attack_message(is_our_victory, 1)
end

---恢复最后一击慢放
---@protected
---@param is_our_victory boolean 是否是我方胜利
function battle_final_attack:on_final_attack_recover_handle(is_our_victory)
    -- 同步最后一击结束事件
    self.context.message:send_final_attack_message(is_our_victory, 2)
end

---卸载
---@protected
function battle_final_attack:tear_down()
    self.final_attack_recover_callback = nil
    
    super.tear_down(self)
end

return battle_final_attack