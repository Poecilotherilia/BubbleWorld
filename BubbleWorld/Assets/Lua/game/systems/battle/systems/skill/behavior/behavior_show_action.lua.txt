---
--- Generated by wuhaijun
--- File name : behavior_show_action.lua.txt
--- DateTime : 2021/07/19
--- Description : 行为目标播放动画，具体播放什么由动画数据参数指定。
---

---@type battle_helper
local helper = battle_helper
local is_nil_or_empty = string.is_nil_or_empty
local behavior_class_name = enum.battle.behavior_class_name

---@type battle_effect_utility
local battle_effect_utility = require(helper.path.battle_skill .. 'utility/battle_effect_utility')
---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type base_behavior
local super = require(helper.path.battle_skill .. 'behavior/base_behavior')

---@class behavior_show_action : base_behavior
local behavior_show_action = class("behavior_show_action", super)

---构造函数
---@protected
function behavior_show_action:ctor()
    super.ctor(self, self.cname)
end

---行为开始，根据配置延迟后开始
---@protected
function behavior_show_action:on_start()
    -- 播放动画时的持续时间必须大于0，否则跳过
    if self.behavior_data.duration_time <= 0 then return end

    ---@type show_action_data
    local data = self.behavior_data.behavior_args.ShowActionData
    self:log_assert(data ~= nil, "invalid ShowActionData")

    -- 单位播放动画
    if not is_nil_or_empty(data.ActionName) and data.ActionName ~= 'None' then
        local entity = self:get_current_entity()
        self:log_info('skill show action, eid = ', entity.eid, ', ActionName = ', data.ActionName)
        entity:replace_component(battle_components.unit_action, data.ActionName)
    end

    -- 后处理
    if data.PostProcessingConfig ~= nil then
        local delay_time<const> = 0
        local duration_time<const> = 0
        local class_name<const> = behavior_class_name.POST_PROCESSING

        ---@type skill_behavior_config_args
        local config_args = self.context:get_free_table("behavior_show_action.PostProcessing")
        config_args.PostProcessingConfigData = data.PostProcessingConfig

        self:generate_behavior(delay_time, duration_time, class_name, config_args, self:get_current_eid())
    end

    -- 震屏
    if data.ShakeScreenConfig ~= nil then
        for i = 1, #data.ShakeScreenConfig.ConfigList do
            battle_effect_utility.generate_shake_screen_behavior(self, data.ShakeScreenConfig.ConfigList[i])
        end
    end
end

return behavior_show_action