---
--- Generated by wuhaijun
--- File name : behavior_skill_camera.lua.txt
--- DateTime : 2021/11/04
--- Description : 
---     镜头动画:
---         0.默认镜头流程；
---         1.进阶技能：
---             (1)我方释放进阶技能时，需要指定前摇镜头动画。
---             (2)敌方释放进阶技能时，需要指定前摇特写时间
---

---@type battle_helper
local helper = battle_helper
---@type enum_battle
local enum_battle = enum.battle
local camera_flow_type = enum_battle.skill_camera_flow_type
local camera_event_type = enum_battle.skill_camera_event_type

---@type battle_constant
local battle_constant = require(helper.path.battle_utils .. 'battle_constant')
---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type battle_utility
local battle_utility = require(helper.path.battle_utils .. 'battle_utility')
---@type base_behavior
local super = require(helper.path.battle_skill .. 'behavior/base_behavior')

---@class behavior_skill_camera : base_behavior
local behavior_skill_camera = class("behavior_skill_camera", super)

---构造函数
---@protected
function behavior_skill_camera:ctor()
    super.ctor(self, self.cname)
end

---行为开始，根据配置延迟后开始
---@protected
function behavior_skill_camera:on_start()
    ---@type skill_camera_data
    local camera_data = self.behavior_data.behavior_args.SkillCameraData
    self:log_assert(camera_data ~= nil, "invalid SkillCameraData")
    
    -- 是否是单体攻击
    local is_single = self.skill_data.is_single_attack
    
    ---确认镜头流程类型
    ---@type skill_camera_flow_type
    local flow_type
    -- 技能模式，0=近战,1=远程,2=召唤
    if camera_data.SkillMode == 0 and is_single then
        flow_type = camera_flow_type.MELEE_SINGLE_ATTACK
    elseif camera_data.SkillMode == 0 and not is_single then
        flow_type = camera_flow_type.MELEE_GROUP_ATTACK
    elseif camera_data.SkillMode == 1 and is_single then
        flow_type = camera_flow_type.REMOTE_SINGLE_ATTACK
    elseif camera_data.SkillMode == 1 and not is_single then
        flow_type = camera_flow_type.REMOTE_GROUP_ATTACK
    elseif camera_data.SkillMode == 2 then
        flow_type = camera_flow_type.SUMMON_UNIT_SKILL
    else
        self:log_error("skill camera flow type error, SkillMode = ", camera_data.SkillMode, ", is_single = ", is_single)
    end

    -- 设置技能流程起始流程
    battle_utility.set_skill_camera_starting_flow(self.context, self.skill_data.caster_uid, camera_data.SkillType, flow_type,
            camera_event_type.BEGIN_SKILL, self.skill_data.target_uid, camera_data.ShowTime, camera_data.ActionName)
 
    self:log_info("current camera flow type = ", helper.get_enum_name(camera_flow_type, flow_type))
    
    -- 普攻和进阶技能开始时，场景压黑
    if camera_data.SkillType == 0 or camera_data.SkillType == 1 then
        local begin_value = battle_constant.MAP_BRIGHTNESS_UNIVERSAL_VALUE
        local end_value = battle_constant.MAP_BRIGHTNESS_LESSEN_VALUE
        local duration_time = battle_constant.MAP_BRIGHTNESS_DURATION_TIME
        local battle_field_entity = self.context:get_unique_component(battle_components.battle_field)
        battle_field_entity:replace_component(battle_components.battle_map, true, begin_value, end_value, duration_time)
    end
end

return behavior_skill_camera