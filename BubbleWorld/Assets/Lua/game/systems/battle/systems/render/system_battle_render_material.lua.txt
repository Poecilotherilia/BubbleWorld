---
--- Generated by wuhaijun
--- File name : system_battle_render_material.lua.txt
--- DateTime : 2023/06/29
--- Description : 
---

---@type battle_helper
local helper = battle_helper

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class system_battle_render_material : reactive_system
local system_battle_render_material = class("system_battle_render_material", super)

---构造函数
---@protected
---@param context context
function system_battle_render_material:ctor(context)
    super.ctor(self, context)
end

---初始化
---@protected
function system_battle_render_material:initialize()
end

---获取触发配置
---@protected
---@param context context
---@return collector
function system_battle_render_material:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.material_data))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function system_battle_render_material:filter(entity)
    return entity:has_component(battle_components.material_data)
end

---组件变化时执行
---@protected
---@param entity_list entity[] 实体列表
---@param entity_count number 列表长度
function system_battle_render_material:executes(entity_list, entity_count)
    local context = self.context
    
    for i = 1, entity_count do
        local entity = entity_list[i]
        local render_unit = context.renderer:get_render_unit(entity.eid)
        if render_unit ~= nil then
            ---@type queue battle_material_operation_config 队列
            local data_queue = entity:get_component(battle_components.material_data).value
            while not data_queue:is_empty() do
                self:on_show_material_operation(render_unit, data_queue:dequeue())
            end
        end
    end
end

---显示材质球操作处理
---@private
---@param render_unit base_render
---@param operation battle_material_operation_config
function system_battle_render_material:on_show_material_operation(render_unit, operation)
    if operation == nil then return end
    
    for i = 1, #operation.DataList do
        local config = operation.DataList[i]
        
        -- 修改材质球属性数据
        if config.PropertyDataList ~= nil then
            for j = 1, #config.PropertyDataList do
                render_unit:set_material_property_data(config.PropertyDataList[j])
            end
            
        elseif config.ReplaceMaterialPath ~= nil then
            -- TODO(WHJ) : 替换材质球逻辑
        end
    end
end

return system_battle_render_material