---
--- Generated by wuhaijun
--- File name : system_battle_render_freeze_frame.lua.txt
--- DateTime : 2023/04/20
--- Description : 目标执行顿帧流程
---

---@type battle_helper
local helper = battle_helper

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class system_battle_render_freeze_frame : reactive_system
local system_battle_render_freeze_frame = class("system_battle_render_freeze_frame", super)

---构造函数
---@protected
---@param context context
function system_battle_render_freeze_frame:ctor(context)
    super.ctor(self, context)

    ---时间缩放结束回调
    ---@private
    ---@type fun()
    self.scale_time_finished_callback = function(...) self:on_scale_time_finished(...) end
end

---获取触发配置
---@protected
---@param context context
---@return collector
function system_battle_render_freeze_frame:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.freeze_frame))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function system_battle_render_freeze_frame:filter(entity)
    return entity:has_component(battle_components.freeze_frame)
end

---组件变化时执行
---@protected
---@param list entity[] 实体列表
---@param count number 列表长度
function system_battle_render_freeze_frame:executes(list, count)
    for i = 1, count do
        self:on_entity_handle(list[i])
    end
end

---实体处理
---@private
---@param entity entity
function system_battle_render_freeze_frame:on_entity_handle(entity)
    -- 获取渲染单位
    local render_unit = self.context.renderer:get_render_unit(entity.eid)
    if render_unit == nil then return end
    
    ---@type { duration:number, time_scale:number }
    local comp_data = entity:get_component(battle_components.freeze_frame)
    
    -- 设置目标动画缩放
    render_unit:set_play_speed(comp_data.time_scale)
    self.context.controller:add_timer(comp_data.duration, self.scale_time_finished_callback, entity.eid)
end

---时间缩放结束
---@private
---@param eid number
function system_battle_render_freeze_frame:on_scale_time_finished(eid)
    if self.context == nil then return end

    local entity = self.context:get_entity_by_primary_index(battle_components.eid, eid)
    if entity == nil then return end
    local render_unit = self.context.renderer:get_render_unit(entity.eid)
    if render_unit == nil then return end

    local current_value = self.context.controller:get_time_scale()
    -- 补帧
    render_unit:fix_render_frame_handle(current_value, 0.1)
    -- 移除顿帧组件
    entity:remove_component(battle_components.freeze_frame)
end

---卸载
---@protected
function system_battle_render_freeze_frame:tear_down()
    self.scale_time_finished_callback = nil
    
    super.tear_down(self)
end

return system_battle_render_freeze_frame