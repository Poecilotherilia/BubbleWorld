---
--- Generated by wuhaijun
--- File name : render_battle_revive.lua.txt
--- DateTime : 2023/08/09
--- Description : 
---

local helper = battle_helper
local enum = enum
local battle_renderer_type = enum.battle.battle_renderer_type

---@type battle_components
local battle_components = require(helper.path.battle_components)

---@type base_render
local super = require(helper.path.battle_render_unit .. 'base_render')

---@class render_battle_revive : base_render
local render_battle_revive = class("render_battle_revive", super)

---构造函数
---@protected
function render_battle_revive:ctor()
    super.ctor(self, battle_renderer_type.REVIVE)

    ---@private
    ---@type fun(e:entity, v:boolean)
    self.active_changed_callback = function(e, v) self:on_active_changed_handle(e, v) end
    
    ---单位数据
    ---@private
    ---@type battle_unit_info
    self.unit_info = nil

    ---当前特效id
    ---@private
    ---@type boolean
    self.cur_effect_uid = nil
end

---加载特效
---@protected
function render_battle_revive:load_unit_handle()
    -- 获取单位数据
    local entity = self:get_entity()
    local unit_info = entity:get_component(battle_components.unit_info).value
    self.unit_info = unit_info
    
    -- 加载等待复活特效
    local effect_id<const> = 'Effect_CC_3'
    local effect_ctrl = self.context.renderer:get_effect_ctrl()
    local effect_uid = effect_ctrl:play_effect_by_pool_sync(effect_id, self.parent_trans, self.play_speed)
    self.cur_effect_uid = effect_uid
    
    -- 设置偏移
    local xx = unit_info.index_point_info.StandingPoint.Position.X
    local yy = unit_info.index_point_info.StandingPoint.Position.Y
    local zz = unit_info.index_point_info.StandingPoint.Position.Z
    effect_ctrl:set_effect_local_position_by_unique_id(effect_uid, xx, yy, zz)

    -- 添加监听
    entity:add_listener(battle_components.unit_active, self.active_changed_callback)

    -- 设置出生数据
    self.active_changed_callback(entity, entity:get_component(battle_components.unit_active).value)
end

---显隐改变
---@private
---@param _ entity
---@param value boolean
function render_battle_revive:on_active_changed_handle(_, value)
    if self.cur_effect_uid ~= nil then
        local effect_ctrl = self.context.renderer:get_effect_ctrl()
        effect_ctrl:set_effect_active_by_unique_id(self.cur_effect_uid, value)
    end
end

---清理
---@public
function render_battle_revive:clear()
    local entity = self:get_entity()
    if entity ~= nil then
        entity:remove_listener(battle_components.unit_active, self.active_changed_callback)
    end
    
    if self.cur_effect_uid ~= nil then
        self.context.renderer:get_effect_ctrl():manual_unload_effect(self.cur_effect_uid)
        self.cur_effect_uid = nil
    end

    self.unit_info = nil

    super.clear(self)
end

---销毁
---@public
function render_battle_revive:dispose()
    super.dispose(self)
    
    self.active_changed_callback = nil
end

return render_battle_revive