---
--- Generated by wuhaijun
--- File name : system_battle_render_closeup.lua.txt
--- DateTime : 2021/11/18
--- Description : 胜利特写镜头
---

---@type battle_helper
local helper = battle_helper
local data_mgr = data
local table_names = tables
local unit_type_flag = enum.battle.unit_type_flag
local is_nil_or_empty = string.is_nil_or_empty
local camera_blend_type = enum.common.camera_blend_type

---@type vector3
local vector3 = require(helper.path.battle_utils .. 'vector3')
---@type battle_utility
local battle_utility = require(helper.path.battle_utils .. 'battle_utility')
---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class system_battle_render_closeup : reactive_system
local system_battle_render_closeup = class("system_battle_render_closeup", super)

---构造函数
---@protected
---@param context context
function system_battle_render_closeup:ctor(context)
    super.ctor(self, context)

    ---@private
    ---@type fun()
    self.camera_action_finished_callback = function() self:camera_action_finished_handle() end
end

---获取触发配置
---@protected
---@param context context
---@return collector
function system_battle_render_closeup:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.victory_closeup))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function system_battle_render_closeup:filter(entity)
    return entity:has_component(battle_components.victory_closeup)
end

---组件变化时执行
---@protected
---@param entity_list entity[]
---@param count number
function system_battle_render_closeup:executes(entity_list, count)
    for i = 1, count do
        self:show_closeup_animation(entity_list[i])
    end
end

---显示单位特写
---@private
---@param entity entity
function system_battle_render_closeup:show_closeup_animation(entity)
    ---@type battle_unit_info
    local unit_info = entity:get_component(battle_components.unit_info).value
    if unit_info.is_death then
        -- 特写单位死亡时，直接发特写结束消息
        self:camera_action_finished_handle()
        return
    end

    -- 旋转180
    entity:replace_component(battle_components.rotation, vector3.new(0, 180, 0))
    
    ---@type RoleRes
    local role_res_data = data_mgr.get(table_names.RoleRes.name, unit_info.role_res_mid)
    ---@type string 镜头索引
    local index
    -- SSR 随机镜头动画
    if (unit_info.unit_type == unit_type_flag.WITCH or unit_info.unit_type == unit_type_flag.NPC) and unit_info.role_rare == 3 then
        index = tostring(math.random(1, 2))
    else
        index = '1'
    end

    ---@type string 胜利动作
    local action_mid1 = role_res_data['VictoryAction' .. index]
    ---@type string 胜利循环
    local action_mid2 = role_res_data['VictoryLoopAction' .. index]
    ---@type string 相机动画
    local action_mid3 = role_res_data['VictoryCameraAction' .. index]
    
    -- 播放镜头动画
    if not is_nil_or_empty(action_mid3) then
        battle_utility.show_camera_animation(self.context, unit_info.uid, action_mid3, self.camera_action_finished_callback,
                camera_blend_type.Cut, 0, false)
    else
        helper.error("没有找到胜利镜头动作, roleResId = ", unit_info.role_res_mid, ", 属性 = VictoryCameraAction", index)
    end

    -- 播放动作处理
    if not is_nil_or_empty(action_mid1) then
        self:play_animation(entity, action_mid1, false, function(_)
            self:play_animation(entity, action_mid2, true)
        end)
    else
        helper.error("没有找到胜利动作, roleResId = ", unit_info.role_res_mid, ", 属性 = VictoryAction", index)
    end
end

---播放动画
---@private 
---@param entity entity
---@param action_mid string
---@param callback fun(eid:number, type:DeusFramework.Animation.Model.DfAnimationEndType, clip_path:string)
function system_battle_render_closeup:play_animation(entity, action_mid, is_loop, callback)
    if is_nil_or_empty(action_mid) then return end
    
    battle_utility.unit_play_action(self.context, entity, action_mid, callback, is_loop, 0)
end

---镜头特写完毕
---@private
function system_battle_render_closeup:camera_action_finished_handle()
    self.context.message.send_victory_closeup_finished()
end

---卸载
---@public
function system_battle_render_closeup:tear_down()
    self.camera_action_finished_callback = nil
     
    super.tear_down(self)
end

return system_battle_render_closeup