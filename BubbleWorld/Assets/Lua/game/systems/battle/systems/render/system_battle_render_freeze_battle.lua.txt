---
--- Generated by wuhaijun
--- File name : system_battle_render_freeze_battle.lua.txt
--- DateTime : 2023/04/20
--- Description : 顿屏
---

---@type battle_helper
local helper = battle_helper
local TweenUtil = cs.TweenUtil
local EaseInCubic = cs.Ease.InCubic
local UpdateTypeNormal = cs.UpdateType.Normal

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class system_battle_render_freeze_battle : reactive_system
local system_battle_render_freeze_battle = class("system_battle_render_freeze_battle", super)

---构造函数
---@protected
---@param context context
function system_battle_render_freeze_battle:ctor(context)
    super.ctor(self, context)

    ---时间缩放结束回调
    ---@private
    ---@type fun()
    self.scale_time_finished_callback = function(...) self:on_scale_time_finished(...) end
    ---修正渲染帧回调
    ---@private
    ---@type fun(v:number)
    self.fix_render_frame_update_callback = function(v) self:on_fix_render_frame_update_handle(v) end

    ---@private
    ---@type number
    self.timer_id = nil
    self.fix_frame_tween = nil
end

---获取触发配置
---@protected
---@param context context
---@return collector
function system_battle_render_freeze_battle:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.freeze_battle))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function system_battle_render_freeze_battle:filter(entity)
    return entity:has_component(battle_components.freeze_battle)
end

---组件变化时执行
---@protected
---@param list entity[] 实体列表
---@param count number 列表长度
function system_battle_render_freeze_battle:executes(list, count)
    for i = 1, count do
        self:on_entity_handle(list[i])
    end
end

---实体处理
---@private
---@param entity entity
function system_battle_render_freeze_battle:on_entity_handle(entity)
    ---@type { duration:number, time_scale:number }
    local comp_data = entity:get_component(battle_components.freeze_battle)
    
    self:remove_timer_handle()
    -- 时间缩放
    local controller = self.context.controller
    controller:set_time_scale(comp_data.time_scale)
    self.timer_id = controller:add_timer_unscale(comp_data.duration, self.scale_time_finished_callback, entity.eid, comp_data.time_scale)
end

---时间缩放结束
---@private
---@param eid number
---@param right_value number
function system_battle_render_freeze_battle:on_scale_time_finished(eid, right_value)
    self.timer_id = nil
    -- 如果其他位置修改全局TimeScale，这里将不再执行恢复
    local current_value = self.context.controller:get_time_scale()
    if right_value ~= current_value then return end
    
    -- 恢复原时间
    local pre_value = self.context.database:get_speed_up_num()
    self.fix_frame_tween = TweenUtil.DoChangeFloat(current_value, pre_value, 0.4, 0, self.fix_render_frame_update_callback,
            function() self:on_fix_render_frame_finished_handle(eid) end, EaseInCubic, UpdateTypeNormal, true)
end

---修正帧更新
---@private
---@param value number
function system_battle_render_freeze_battle:on_fix_render_frame_update_handle(value)
    self.context.controller:set_time_scale(value, true)
end

---修正帧结束
---@private
---@param eid number
function system_battle_render_freeze_battle:on_fix_render_frame_finished_handle(eid)
    self.fix_frame_tween = nil
    -- 移除组件
    local entity = self.context:get_entity_by_primary_index(battle_components.eid, eid)
    if entity ~= nil then
        entity:remove_component(battle_components.freeze_battle)
    end
end

---移除timer
---@protected
function system_battle_render_freeze_battle:remove_timer_handle()
    if self.timer_id ~= nil then
        self.context.controller:remove_timer_unscale(self.timer_id)
        self.timer_id = nil
    end

    if self.fix_frame_tween ~= nil then
        TweenUtil.Clear(self.fix_frame_tween)
        self.fix_frame_tween = nil
    end 
end

---卸载
---@protected
function system_battle_render_freeze_battle:tear_down()
    self:remove_timer_handle()

    self.scale_time_finished_callback = nil
    self.fix_render_frame_update_callback = nil
    
    super.tear_down(self)
end

return system_battle_render_freeze_battle