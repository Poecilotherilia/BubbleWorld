---
--- Generated by wuhaijun
--- File name : system_battle_render_effect_show.lua.txt
--- DateTime : 2021/09/07
--- Description : 
---

---@type battle_helper
local helper = battle_helper
local data_mgr = data
local table_names = tables
local is_nil_or_empty = string.is_nil_or_empty

---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class system_battle_render_effect_show : reactive_system
local system_battle_render_effect_show = class("system_battle_render_effect_show", super)

---构造函数
---@protected
---@param context context
function system_battle_render_effect_show:ctor(context)
    super.ctor(self, context)
end

---获取触发配置
---@protected
---@param context context
---@return collector
function system_battle_render_effect_show:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.show_effect))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function system_battle_render_effect_show:filter(entity)
    return entity:has_component(battle_components.show_effect)
end

---组件变化时执行
---@protected
---@param entity_list entity[]
---@param count number
function system_battle_render_effect_show:executes(entity_list, count)
    for i = 1, count do
        local entity = entity_list[i]

        ---@type queue render_effect_data 战斗特效数据
        local effect_data_queue = entity:get_component(battle_components.show_effect).value

        -- 播放特效队列
        while not effect_data_queue:is_empty() do
            self:try_to_play_effect(effect_data_queue:dequeue(), entity.eid)
        end
    end
end

---播放特效
---@private
---@param data render_effect_data
---@param eid number
function system_battle_render_effect_show:try_to_play_effect(data, eid)
    ---@type base_render 
    local render_unit = self.context.renderer:get_render_unit(eid)
    
    if render_unit == nil then
        self.context:recycle_free_table(data)
        return 
    end
    
    -- 是否初始化完毕
    if render_unit:get_is_init() then
        self:play_effect_by_attack_point(render_unit, data)
    else
        render_unit.init_finished_callback:add(function() self:play_effect_by_attack_point(render_unit, data) end)
    end
end

---播放特效在根据挂点
---@private
---@param render_unit base_render
---@param data render_effect_data
function system_battle_render_effect_show:play_effect_by_attack_point(render_unit, data)
    ---@type string 特效id
    local effect_mid = data.effect_mid
    local xx, yy, zz = data.position_x, data.position_y, data.position_z
    local is_sub_obj = data.is_sub_obj
    local point_name = data.point_name

    -- 回收数据
    self.context:recycle_free_table(data)

    if is_nil_or_empty(point_name) then
        ---@type Effect
        local config = data_mgr.get(table_names.Effect.name, effect_mid)
        if config ~= nil then
            point_name = config.HangingPointPath
        end
    end
    
    -- 成为挂点的子物体
    if is_sub_obj then
        render_unit:play_effect_by_attack_point(effect_mid, point_name, xx, yy, zz)
    else
        -- 只取挂点的位置信息
        ---@type UnityEngine.Transform
        local attach_point = render_unit:get_attach_point(point_name)
        local x, y, z = attach_point:GetPosition()
        xx = xx + x
        yy = yy + y
        zz = zz + z
        render_unit:play_effect_by_position(effect_mid, xx, yy, zz)
    end
end

return system_battle_render_effect_show