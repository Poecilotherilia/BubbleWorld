---
--- Generated by wuhaijun
--- File name : battle_fsm_death.lua.txt
--- DateTime : 2021/04/14
--- Description : 死亡状态
---

local helper = battle_helper
local data_mgr = data
local table_names = tables
local battle_unit_death_type = enum.battle.battle_unit_death_type
local unit_type_flag = enum.battle.unit_type_flag
local string_is_nil_or_empty = string.is_nil_or_empty

---@type battle_constant
local battle_constant = require(helper.path.battle_utils .. 'battle_constant')
---@type battle_utility
local battle_utility = require(helper.path.battle_utils .. 'battle_utility')
---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type fsm_battle_base
local super = require(helper.path.battle_fsm .. 'fsm/fsm_battle_base')

---@class battle_fsm_death : fsm_battle_base
local battle_fsm_death = class("battle_fsm_death", super)

---构造函数
---@protected
---@param context context
function battle_fsm_death:ctor(context)
    super.ctor(self, table_names.BTLState.ids.BTLState_Death, context)

    ---销毁单位实体
    ---@private
    ---@type fun(eid:number)
    self.show_unit_dissolve_callback = function(eid) self:show_unit_dissolve_effect(eid) end
    ---销毁
    ---@private
    ---@type fun(eid:number)
    self.destroy_unit_entity_callback = function(eid) self:destroy_unit_entity(eid) end
end

---进入状态
---@protected
---@param entity entity
function battle_fsm_death:enter_state(entity)
    ---@type battle_unit_info
    local unit_info = entity:get_component(battle_components.unit_info).value

    entity:replace_component(battle_components.unit_death, unit_info.death_type or battle_unit_death_type.NORMAL)
    -- 向UI层同步死亡消息
    self.context.message:send_sync_unit_death(unit_info.uid) 
    
    -- 1=普通死亡
    if unit_info.death_type <= battle_unit_death_type.NORMAL then
        self:on_normal_death_handle(unit_info, entity, self.show_unit_dissolve_callback)
    else
        helper.error("The death type was not processed, type = ", helper.get_enum_name(battle_unit_death_type, unit_info.death_type))
    end
end

---普通死亡处理
---@private
---@param unit_info battle_unit_info
---@param entity entity
function battle_fsm_death:on_normal_death_handle(unit_info, entity, finish_callback)
    ---@type RoleRes
    local role_res_data = data_mgr.get(table_names.RoleRes.name, unit_info.role_res_mid)
    helper.assert(role_res_data ~= nil, "not found RoleRes data, role_res_mid = ", unit_info.role_res_mid)

    helper.log('normal death handle, uid = ', helper.to_string(unit_info.uid))

    ---@type string 死亡动作
    local dea_action = role_res_data[table_names.RoleRes.properties.DieAction]
    if not string_is_nil_or_empty(dea_action) and dea_action ~= 'None' then
        entity:replace_component(battle_components.unit_action, table_names.RoleRes.properties.DieAction, false, -1, finish_callback)
    else
        -- 延迟销毁单位实体
        self.context.controller:add_timer(400, finish_callback, entity.eid)
    end
end

---显示单位溶解效果
---@private
---@param eid number 实体id
function battle_fsm_death:show_unit_dissolve_effect(eid)
    helper.log('start show dissolve effect, eid = ', eid)

    local render_unit = self.context.renderer:get_render_unit(eid)
    ---@type ConstClient
    local const_client_data = data_mgr.get(table_names.ConstClient.name, table_names.ConstClient.ids.KW_ANIMATE_DIE_TIME)
    ---@type number 持续时间
    local duration = const_client_data.Int

    -- 显示溶解
    render_unit:show_dissolve_effect(true, duration / 1000)
    local duration_time = duration - 1000
    if duration_time < 0 then
        duration_time = 0
    end
    -- 延迟销毁单位
    self.context.controller:add_timer(duration_time, self.destroy_unit_entity_callback, eid)
end

---销毁单位实体
---@private
---@param eid number 实体id
function battle_fsm_death:destroy_unit_entity(eid)
    local context = self.context
    
    local entity = context:get_entity_by_primary_index(battle_components.eid, eid)
    if entity == nil then return end

    ---@type battle_unit_info
    local unit_info = entity:get_component(battle_components.unit_info).value
    if unit_info.unit_type == unit_type_flag.WITCH then
        -- 如果是女巫，则显示等待复活特效，不销毁实体
        -- 移除当前渲染层
        context.renderer:remove_render_unit(entity.eid)
        -- 重新生成渲染层
        entity:replace_component(battle_components.replace_render, '', battle_constant.RENDER_BATTLE_REVIVE)
        
    else
        -- 销毁单位
        entity:replace_component(battle_components.destroyed)
        
    end
end

---卸载
---@public
function battle_fsm_death:dispose()
    self.destroy_unit_entity_callback = nil
    self.show_unit_dissolve_callback = nil

    super.dispose(self)
end

return battle_fsm_death