---
--- Generated by wuhaijun
--- File name : fsm_battle_base.lua.txt
--- DateTime : 2021/04/14
--- Description : 
---

local helper = battle_helper
local data_mgr = data
local table_names = tables

---@type state_utility
local state_utility = require(helper.path.battle_fsm .. 'state_utility')
---@type battle_components
local battle_components = require(helper.path.battle_components)

---@class fsm_battle_base
local fsm_battle_base = class("fsm_battle_base")

---构造函数
---@protected
---@param mid string 状态表ID
---@param context context
function fsm_battle_base:ctor(mid, context)
    ---@protected
    ---@type context
    self.context = context
    
    ---状态表id
    ---@type string
    self.state_mid = mid

    ---动画播放完毕回调
    ---@private
    ---@type fun(eid:number)
    self.animation_finished_callback = function(eid) self:on_animation_finished(eid) end
end

---动画播放完毕
---@protected
---@param eid number
function fsm_battle_base:on_animation_finished(eid)
    state_utility.exit_state_by_eid(self.context, eid, self.state_mid)
end

---是否需要恢复该状态
---@public
---@return boolean
function fsm_battle_base:is_need_restore()
    return false
end

---进入状态
---@public
---@param entity entity
function fsm_battle_base:on_enter_state(entity)
    helper.log('unit enter state, eid = ', entity.eid, ', state = ', self.state_mid)
    self:set_state_constraint(entity, true)
    self:enter_state(entity)
end

---退出状态
---@public
---@param entity entity
function fsm_battle_base:on_exit_state(entity)
    self:set_state_constraint(entity, false)
    self:exit_state(entity)
    helper.log('unit exit state, eid = ', entity.eid, ', state = ', self.state_mid)
end

---设置状态限制
---@private
---@param entity entity 目标实体
---@param is_add boolean 是否添加
function fsm_battle_base:set_state_constraint(entity, is_add)
    ---@type table<string, BTLState>
    local state_dict = data_mgr.get_all(table_names.BTLState.name)

    ---@type number[]
    local restrict = state_dict[self.state_mid].StateRestrict
    local count = #restrict

    local constraint = 0
    if count == 1 and restrict[1] == -1 then
        -- 限制所有
        if is_add then
            for _, state_value in pairs(state_dict) do
                constraint = constraint | (1 << state_value.StateType)
            end
        else
            for _, state_value in pairs(state_dict) do
                constraint = constraint ~ (1 << state_value.StateType)
            end
        end
    else
        -- 限制部分
        if is_add then
            for i = 1, count do
                constraint = constraint | (1 << restrict[i])
            end
        else
            for i = 1, count do
                constraint = constraint ~ (1 << restrict[i])
            end
        end
    end

    entity:replace_component(battle_components.state_constraint, constraint)
end

---进入状态
---@protected
---@param _ entity
function fsm_battle_base:enter_state(_)

end

---退出状态
---@protected
---@param _ entity
function fsm_battle_base:exit_state(_)

end

---销毁
---@public
function fsm_battle_base:dispose() 
    self.state_mid = nil
    self.context = nil
    self.animation_finished_callback = nil
end

return fsm_battle_base