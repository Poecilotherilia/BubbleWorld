---
--- Generated by wuhaijun
--- File name : system_battle_round.lua.txt
--- DateTime : 2021/04/23
--- Description : 
---

local helper = battle_helper
local battle_step_type = enum.battle.battle_step_type
local battle_mode_type = enum.battle.battle_mode_type

---@type battle_components
local battle_components = require(helper.path.battle_components)

---@type round_battle_try_get_data
local round_battle_try_get_data = require(helper.path.battle_round .. 'round_battle_try_get_data')
---@type round_battle_process_action_data
local round_battle_process_action_data = require(helper.path.battle_round .. 'round_battle_process_action_data')
---@type round_battle_check_action_stage
local round_battle_check_action_stage = require(helper.path.battle_round .. 'round_battle_check_action_stage')
---@type round_battle_unit_action_before
local round_battle_unit_action_before = require(helper.path.battle_round .. 'round_battle_unit_action_before')
---@type round_battle_get_playback_data
local round_battle_get_playback_data = require(helper.path.battle_round .. 'round_battle_get_playback_data')
---@type round_battle_over_condition
local round_battle_over_condition = require(helper.path.battle_round .. 'round_battle_over_condition')

---@type systems
local super = require(helper.path.ecs .. 'systems')

---@class system_battle_round : systems
local system_battle_round = class("system_battle_round", super)

---构造函数
---@protected
---@param context context
function system_battle_round:ctor(context)
    super.ctor(self, context)
    
    self.context = context
    self.is_running = nil
end

---初始化
---@public
function system_battle_round:initialize()
    super.initialize(self)

    local entity, step_comp = self.context:get_unique_component(battle_components.battle_step)
    entity:add_listener(battle_components.battle_step, self.on_battle_step_changed, self)
    self:on_battle_step_changed(entity, step_comp.value)
end

---战斗步骤改变
---@private
---@param step_type battle_step_type
function system_battle_round:on_battle_step_changed(_, step_type)
    self.is_running = step_type < battle_step_type.END
end

---添加系统
---@protected
---@param context context
function system_battle_round:add_system(context)
    self:add(round_battle_try_get_data.new(context))
    self:add(round_battle_process_action_data.new(context))
    self:add(round_battle_check_action_stage.new(context))
    self:add(round_battle_unit_action_before.new(context))
    local cur_mode_type = context.database:get_mode_type()
    if cur_mode_type == battle_mode_type.PLAYBACK or cur_mode_type == battle_mode_type.PLAYBACK_CURRENT then
        self:add(round_battle_get_playback_data.new(context))
    end
    self:add(round_battle_over_condition.new(context))
end

---执行(每帧)
---@public
function system_battle_round:execute()
    if not self.is_running then return end

    super.execute(self)
end

---卸载
---@public
function system_battle_round:tear_down()
    local entity, _ = self.context:get_unique_component(battle_components.battle_step)
    entity:remove_listener(battle_components.battle_step, self.on_battle_step_changed)
    self.is_running = nil
    self.context = nil
    
    super.tear_down(self)
end

return system_battle_round