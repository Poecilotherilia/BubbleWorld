---
--- Generated by wuhaijun
--- File name : round_battle_over_condition.lua.txt
--- DateTime : 2021/11/17
--- Description : 结束条件处理
---

---@type battle_helper
local helper = battle_helper
local battle_step_type = enum.battle.battle_step_type
local data_mgr = data
local table_names = tables

---@type ident
local ident = require(helper.path.battle_utils .. 'ident')
---@type battle_components
local battle_components = require(helper.path.battle_components)
---@type matchers
local matchers = require(helper.path.ecs .. 'matchers')
---@type reactive_system
local super = require(helper.path.ecs .. 'reactive_system')

---@class round_battle_over_condition : reactive_system
local round_battle_over_condition = class("round_battle_over_condition", super)

---构造函数
---@protected
---@param context context
function round_battle_over_condition:ctor(context)
    super.ctor(self, context)

    ---战斗结束处理
    ---@private
    ---@type fun()
    self.battle_end_handle_callback = function() self:on_battle_end_handle() end
    ---胜利特写延迟回调
    ---@private
    ---@type fun()
    self.victory_closeup_delay_callback = function() self:on_victory_closeup_delay() end
end

---获取触发配置
---@protected
---@param context context
---@return collector
function round_battle_over_condition:get_trigger(context)
    return context:get_collector(matchers.all(battle_components.over_condition))
end

---过滤
---@protected
---@param entity entity
---@return boolean
function round_battle_over_condition:filter(entity)
    return entity:has_component(battle_components.over_condition)
end

---执行(每帧)
---@protected
---@param list entity[]
function round_battle_over_condition:executes(list)
    for _ = 1, #list do
        self:check_battle_is_finished()
    end
end

---检测队伍是否全部死亡
---@private
function round_battle_over_condition:check_battle_is_finished()
    -- 设置战斗步骤到结束
    self.context.controller:set_battle_step(battle_step_type.END)
    
    -- 延迟时间后结算
    local client_const = table_names.ConstClient
    local wait_time = data_mgr.get(client_const.name, client_const.ids.KW_BATTLE_WIN_DELAY, client_const.properties.Int) or 0
    self.context.controller:add_timer(wait_time, self.battle_end_handle_callback)
end

---战斗结束处理
---@private
function round_battle_over_condition:on_battle_end_handle()
    local context = self.context

    -- 恢复正常速度
    self.context.controller:set_time_scale(1)
    
    ---@type AckBTLEndInfo
    local end_info = context.database:get_battle_result_data()
    -- 如果胜利 && 没有显示结算演出，那么执行最后一击角色特写
    if end_info.is_victory == 1 and not context.database:check_skip_battle_settlement() then
        ---@type ident
        local victory_entity_id = ident.wrap(end_info.victory_entity_id)
        self:set_other_units_hide(victory_entity_id)
        local victory_entity = context:get_entity_by_primary_index(battle_components.uid, victory_entity_id)
        if victory_entity ~= nil then
            ---@type battle_unit_info
            local victory_unit_info = victory_entity:get_component(battle_components.unit_info).value
            if not victory_unit_info.is_death then
                victory_entity:replace_component(battle_components.victory_closeup)
            else
                -- 特写单位死亡时，发特写结束消息
                context.controller:add_timer(1000, self.victory_closeup_delay_callback)
            end
        else
            helper.error_round("not found victory entity, victory_entity_id = ", helper.to_string(victory_entity_id))
        end
    end

    -- 切换到结算战斗步骤
    context.controller:set_battle_step(battle_step_type.SETTLE)
end

---隐藏最后一击魔女以外的其他角色
---@private
---@param entity_id string 最后一击ident
function round_battle_over_condition:set_other_units_hide(entity_id)
    ---@type battle_unit_info[]
    local entity_list = self.context.database:get_unit_info_list()
    if entity_list ~= nil then
        for i = 1, #entity_list do
            local unit_info = entity_list[i]
            if unit_info ~= nil and unit_info.uid ~= entity_id then
                -- 死亡单位的实体，有可能被销毁了
                local entity = self.context:get_entity_by_primary_index(battle_components.uid, unit_info.uid)
                if entity ~= nil then
                    entity:replace_component(battle_components.unit_active, false)
                end
            end
        end
    end
end

---延迟特写处理
---@private
---@return boolean
function round_battle_over_condition:on_victory_closeup_delay()
    self.context.message.send_victory_closeup_finished()
end

---卸载
---@public
function round_battle_over_condition:tear_down()
    self.battle_end_handle_callback = nil
    self.victory_closeup_delay_callback = nil

    super.tear_down(self)
end

return round_battle_over_condition