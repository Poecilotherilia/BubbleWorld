---
--- Generated by wuhaijun
--- File name : entity_index_primary.lua.txt
--- DateTime : 2021/04/01
--- Description : 
---     maps primary keys to entities.
---

local helper = ecs_helper
local table_remove = table.remove
---@type entity_index
local super = require(helper.path .. 'entity_index')

---@class entity_index_primary : entity_index
local entity_index_primary = class("entity_index_primary", super)

---构造函数
---@protected
---@param comp_type component_type
---@param group group
---@vararg string
function entity_index_primary:ctor(comp_type, group, ...)
    super.ctor(self, comp_type, group, ...)
end

---添加实体
---@protected
---@param _ component
---@param entity entity
function entity_index_primary:add_entity(_, entity)
    local entity_list = self.entity_list

    entity_list[#entity_list + 1] = entity
end

---更新实体
---@protected
---@param _ component
---@param entity entity
function entity_index_primary:update_entity(_, entity)
    local entity_list = self.entity_list

    for i = 1, #entity_list do
        if entity_list[i].eid == entity.eid then
            entity_list[i] = entity
            break
        end
    end
end

---移除实体
---@protected
---@param _ component
---@param entity entity
function entity_index_primary:remove_entity(_, entity)
    local entity_list = self.entity_list

    for i = 1, #entity_list do
        if entity_list[i].eid == entity.eid then
            table_remove(entity_list, i)
            break
        end
    end
end

---根据组件值获取实体
---@public
---@vararg any
---@return entity
function entity_index_primary:get_entity(...)
    ---@type entity
    local entity = nil
    
    if ... == nil then
        return entity
    end

    local entity_list = self.entity_list
    local field_list = self.field_list
    local comp_type = self.comp_type

    local value_length = select('#', ...)
    local field_length = #field_list
    if value_length ~= field_length then
        helper.error('parameter length error, value_length = ', value_length, ', field_count = ', field_length)
        return entity
    end

    for i = 1, #entity_list do
        local item = entity_list[i]
        local comp = item:get_component(comp_type)
        if comp ~= nil and self:check_comp_value_same(comp, field_length, field_list, ...) then
            entity = item
            break
        end
    end

    return entity
end


---检测是否是要查找的的组件值
---@private
---@param comp component
---@param field_length number
---@param field_list string[]
---@vararg any
---@return boolean
function entity_index_primary:check_comp_value_same(comp, field_length, field_list, ...)
    local consistent = true
    for i = 1, field_length do
        if comp[field_list[i]] ~= select(i, ...) then
            consistent = false
            break
        end
    end

    return consistent
end

return entity_index_primary