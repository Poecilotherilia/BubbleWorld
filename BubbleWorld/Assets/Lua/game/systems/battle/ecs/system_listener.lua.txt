---
--- Generated by wuhaijun
--- File name : listeners_system.lua.txt
--- DateTime : 2021/04/06
--- Description : 
---     When the parameter of the component changes, 
---     the system will capture these changed entities and notify the listeners
---

local helper = ecs_helper
local table_concat = table.concat

---@class listeners_system
local system_listener = class("system_listener")

---构造函数
---@protected
---@param context context 
function system_listener:ctor(context)
    self.context = context

    ---@private
    ---@type entity[]
    self.buff_list = {}

    ---@private
    ---@type string[]
    self.temp_str_table = {}
end

---执行(每帧)
---@public
function system_listener:execute()
    local comp_list = self.context:get_listener_list()
    for i = #comp_list, 1, -1 do
        local comp_type = comp_list[i]
        
        local listener, callback_dict = self.context:get_listener(comp_type)
        if listener ~= nil then
            local list, count = listener:get_entity_list(self.buff_list)
            if count > 0 then
                listener:clear_entity()
                self:on_component_value_change_handle(list, count, comp_type, callback_dict)
            end
        else
            helper.error('No listener found, comp_type = ', comp_type.cname)
        end
    end
end

---组件值改变时处理
---@private
---@param entity_list entity[]
---@param list_count number
---@param comp_type component
---@param callback_dict table<number, callback>
function system_listener:on_component_value_change_handle(entity_list, list_count, comp_type, callback_dict)
    for i = 1, list_count do
        local entity = entity_list[i]
        
        local target_comp = entity:get_component(comp_type)

        --helper.log('component value change detected, name = ', comp_type.cname, ", eid = ", entity.eid, ", data = ", 
        --        self:get_component_data_str(target_comp:get_all_data()))

        local callback = callback_dict[entity.eid]
        if callback ~= nil then
            callback(entity, target_comp:get_all_data())
        end
    end
end

---将组件数据链接成字符串
---@private
---@vararg string
---@return string
function system_listener:get_component_data_str(...)
    if ... ~= nil then
        local str_arr = self.temp_str_table
        helper.clear(str_arr)

        for i = 1, select('#', ...) do
            local s = select(i, ...)
            str_arr[#str_arr + 1] = tostring(s)
        end

        return table_concat(str_arr, ',')
    else
        return 'nil'
    end
end

---卸载
---@public
function system_listener:tear_down()
    self.temp_str_table = nil
    self.buff_list = nil
    self.context = nil
end

return system_listener