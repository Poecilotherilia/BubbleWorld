---
--- Generated by wuhaijun
--- File name : battle_context.lua.txt
--- DateTime : 2021/04/26
--- Description : 
---

local helper = battle_helper

---@type object_pool
local object_pool = require 'framework/pool/object_pool'
---@type custom_table
local custom_table = require 'framework/basic/custom_table'
---@type vector3
local vector3 = require(helper.path.battle_utils .. 'vector3')
---@type queue
local queue = require 'framework/basic/queue'
---@type stack
local stack = require 'framework/basic/stack'
---@type battle_components
local battle_components = require(helper.path.battle_components)

--@alias battle_context context
---@type context
local battle_context = require(helper.path.ecs .. 'context')

---初始化
---@public
---@param controller battle_controller
function battle_context:initialize(controller)
    ---table池
    ---@private
    ---@type object_pool
    self.table_pool = object_pool.new(
            function() return {} end,
            function(item) helper.clear(item) end, 
            function(item) helper.clear(item) end
    )
    ---vector3池
    ---@private
    ---@type object_pool
    self.vector3_pool = object_pool.new(
            function() return vector3.new() end,
            function(item) item:reset() end,
            function(item) item:reset() end
    )
    ---queue池
    ---@private
    ---@type object_pool
    self.queue_pool = object_pool.new(
            function() return queue.new() end,
            function(item) item:dispose() end,
            function(item) item:clear() end
    )
    ---queue池
    ---@private
    ---@type object_pool
    self.stack_pool = object_pool.new(
            function() return stack.new() end,
            function(item) item:dispose() end,
            function(item) item:clear() end
    )

    ---自定义table池
    ---@private
    ---@type object_pool
    self.custom_table_pool = object_pool.new(
            function() return custom_table.new() end,
            function(item) item:dispose() end,
            function(item) item:clear() end
    )
    
    ---战斗控制器
    ---@public
    ---@type battle_controller
    self.controller = controller

    ---战斗数据管理
    ---@public
    ---@type battle_database
    self.database = controller.database
    
    ---战斗消息管理类
    ---@public
    ---@type battle_message
    self.message = controller.message

    ---战斗网络管理
    ---@public
    ---@type battle_network
    self.network = controller.network

    ---战斗渲染层
    ---@public
    ---@type battle_renderer
    self.renderer = controller.renderer
end

--region 对象池
---池中获取一个空闲Table
---@public
---@param sign string
---@return table
function battle_context:get_free_table(sign)
    return self.table_pool:get(sign)
end

---将Table归还到池中
---@public
---@param item table
function battle_context:recycle_free_table(item)
    self.table_pool:recycle(item)
end

---池中获取一个空闲Vector3
---@public
---@param sign string
---@return vector3
function battle_context:get_free_vector3(sign)
    return self.vector3_pool:get(sign) 
end

---将Vector3归还到池中
---@public
---@param vec vector3
function battle_context:recycle_free_vector3(vec)
    self.vector3_pool:recycle(vec)
end

---池中获取一个空闲queue
---@public
---@param sign string
---@return queue
function battle_context:get_free_queue(sign)
    return self.queue_pool:get(sign)
end

---将queue归还到池中
---@public
---@param que queue
function battle_context:recycle_free_queue(que)
    self.queue_pool:recycle(que)
end

---池中获取一个空闲stack
---@public
---@param sign string
---@return stack
function battle_context:get_free_stack(sign)
    return self.stack_pool:get(sign)
end

---将stack归还到池中
---@public
---@param s stack
function battle_context:recycle_free_stack(s)
    self.stack_pool:recycle(s)
end

---池中获取一个空闲custom_table
---@public
---@param sign string
---@return custom_table
function battle_context:get_free_custom_table(sign)
    return self.custom_table_pool:get(sign)
end

---将custom_table归还到池中
---@public
---@param ct custom_table
function battle_context:recycle_free_custom_table(ct)
    self.custom_table_pool:recycle(ct)
end

---获取一个战斗技能数据
---@public
---@return battle_skill_data
function battle_context:get_free_battle_skill_data()
    ---@type battle_skill_data
    local skill_data = self:get_free_table('battle_skill_data')
    skill_data.effect_list = self:get_free_table('battle_skill_data.effect_list')
    
    return skill_data
end

---回收战斗技能数据
---@public
---@param skill_data battle_skill_data
function battle_context:recycle_battle_skill_data(skill_data)
    self:recycle_free_table(skill_data.effect_list)
    self:recycle_free_table(skill_data)
end

---回收buff数据
---@public
---@param buff_data buff_data_component_data
function battle_context:recycle_battle_buff_data(buff_data)
    for _, value in pairs(buff_data.running_data) do
        self:recycle_free_table(value)
    end
    self:recycle_free_table(buff_data.running_data)
    self:recycle_free_table(buff_data)
end

---获取技能运行数据
---@param behavior_id number 行为id
---@param behavior_name string 行为类名
---@return skill_running_data
function battle_context:get_skill_running_data(behavior_id, behavior_name)
    ---@type skill_running_data
    local behavior_data
    if not helper.is_debug then
        behavior_data = self:get_free_table('behavior_data_list.behavior_data.behavior_name')
    else
        behavior_data = self:get_free_table('behavior_data_list.behavior_data.' .. (behavior_name or ''))
    end

    behavior_data.behavior_id = behavior_id

    return behavior_data
end
--endregion

---尝试回收组件数据
---@private
function battle_context:try_to_recycle_component_data()
    for i = 1, self.entity_size do
        local entity = self.entity_list[i]

        ---@type skill_running_component_data
        local running_comp = entity:get_component(battle_components.skill_running)
        if running_comp ~= nil then
            self:recycle_battle_skill_data(running_comp.skill_data)
            for j = 1, #running_comp.running_queue do
                self:recycle_free_table(running_comp.running_queue[j])
            end
            self:recycle_free_queue(running_comp.running_queue)
        end

        ---@type { value:string[] }
        local actived_comp = entity:get_component(battle_components.actived_behaviors)
        if actived_comp ~= nil then
            self:recycle_free_table(actived_comp.value)
        end
    end
end

---销毁
---@public
function battle_context:destroy()
    self:try_to_recycle_component_data()
    self:dispose()

    self.table_pool:dispose()
    self.table_pool = nil
    
    self.vector3_pool:dispose()
    self.vector3_pool = nil
    
    self.queue_pool:dispose()
    self.queue_pool = nil

    self.stack_pool:dispose()
    self.stack_pool = nil

    self.custom_table_pool:dispose()
    self.custom_table_pool = nil

    self.renderer = nil
    self.network = nil
    self.message = nil
    self.database = nil
    self.controller = nil
    
    self.recycle_queue_data_callback = nil
end

return battle_context