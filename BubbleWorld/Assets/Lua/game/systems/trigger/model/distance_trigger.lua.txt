---
--- Generated by libin
--- File name : distance_trigger.lua.txt
--- DataTime : 2023/03/13
--- Description : 距离显隐触发器
---

local super = require "game/systems/trigger/model/base_trigger"
local btn_multi_click_mgr = button_multi_click_manager
local message_type = enum.message_type
local message = message
local guide_trigger_type = enum.guide.guide_trigger_type
local hero_manager = require 'game/hero/hero_manager'
local entry_asset = "Assets/Art/UI/Prefab/Trigger/trigger_entry_2.prefab"
local asset_type = require 'framework/res/model/asset_type'
local res = res
local cs = cs
local t = tables
local data = data
local tables = tables
local string = string
local role_attach_point_type = enum.common.role_attach_point_type
local CharacterLuaBehaviour = cs.CharacterLuaBehaviour

---@class distance_trigger : base_trigger
local distance_trigger = class("distance_trigger", super)

---构造函数
---@private
function distance_trigger:ctor(id, config_id, table_name, distance_target)
    self.distance_target = distance_target
    super.ctor(self, id, config_id, table_name)
end

function distance_trigger:init()
    super.init(self)
    ---@type TriggerRes
    self.trigger_res_data = data.get(t.TriggerRes.name, self.trigger_data.ResId)
    self.priority = self.trigger_res_data.Priority
    if self.trigger_res_data.Type == 1 then
        self.target_go = cs.GameObject.Find(self.trigger_res_data.Value)
    elseif self.trigger_res_data.Type == 3 then
        self.target_go = cs.GameObject.Find(self.trigger_res_data.Value)
    elseif self.trigger_res_data.Type == 2 then
        local p = data.get(t.Point.name, self.trigger_res_data.Value)
        self.target_pos = cs.Vector3(p.PositionX / 10000, p.PositionY / 10000, p.PositionZ / 10000)
    end

    if not string.is_nil_or_empty(self.trigger_res_data.PathFindingOffsetPoint) then
        self.path_finding_offset = data.get(t.Point.name, self.trigger_res_data.PathFindingOffsetPoint)
    end

    self.bubble_icon = self.trigger_res_data.BubbleIcon
    self.entry_texture = res.load_asset(self.trigger_res_data.EntryIcon, asset_type.texture)

    local parent = self.target_go and self.target_go.transform or nil
    ---@type UnityEngine.GameObject
    self.entry_go = res.load_instance(entry_asset, self.id, parent)

    if self.trigger_res_data.Type == 1 then
        if not string.is_nil_or_empty(self.trigger_res_data.OffsetPoint) then
            ---@type Point
            local point = data.get(tables.Point.name, self.trigger_res_data.OffsetPoint)
            self.entry_go:SetLocalPosition(point.PositionX / 10000, point.PositionY / 10000, point.PositionZ / 10000)
            self.entry_go:SetLocalRotation(point.RotationX / 10000, point.RotationY / 10000, point.RotationZ / 10000)
        end
    elseif self.trigger_res_data.Type == 3 then
        local chara_behaviour = self.target_go:GetComponentInChildren(typeof(CharacterLuaBehaviour))
        if nil ~= chara_behaviour then
            ---@type UnityEngine.Transform
            local head_trans = chara_behaviour:GetAttackPoint(role_attach_point_type.HEAD)
            if nil ~= head_trans then
                ---@type UnityEngine.Vector3
                local pos = head_trans.position
                self.entry_go:SetPosition(pos.x, pos.y + 2, pos.z)
            end
        end
    else
        if self.target_pos then
            self.entry_go.transform.position = self.target_pos
        end
    end


    local render = self.entry_go:GetComponentInChildren(typeof(cs.Renderer))
    render.material.mainTexture = self.entry_texture.Result

    self.tap_gesture_callback_func = function(id, go)
        self:tap_gesture_callback(id, go)
    end

    ---@type Game.Behaviour.Trigger.TriggerEntryItem
    self.entry = self.entry_go:GetComponentInChildren(typeof(cs.TriggerEntry))
    self.entry:SetTapCallback(self.tap_gesture_callback_func)
    self.entry.triggerId = self.id


    if self.trigger_res_data.VisibleDistance then
        local distance = self.trigger_res_data.VisibleDistance / 10000
        self.entry:SetDistance(distance, self.distance_target)
    end
    self:set_entry_visible(true)

    self.path_finding_callback_func = function()
        self:path_finding_callback()
    end
end

---设置可见性
---@param visible boolean
function distance_trigger:set_entry_visible(visible)
    self.entry:SetDistanceVisible(visible)
end

---设置绑定物体
---@public
---@param obj UnityEngine.GameObject
function distance_trigger:set_bind_object(obj)
    self.entry:SetBindObject(obj)
end

---@public
function distance_trigger:set_target(target)
    self.entry:SetTarget(target)
end

---点击入口图标回调
function distance_trigger:tap_gesture_callback(id, go)
    ---防止多点触摸
    if btn_multi_click_mgr.check_can_click() then
        btn_multi_click_mgr.do_click()
        self:on_tap_bubble()

        message.broadcast(message_type.GUIDE_TRY_TRIGGER, guide_trigger_type.trigger_on, id)
    end
end

---寻路结束回调
function distance_trigger:path_finding_callback()
    hero_manager.stop_path_finding()
    self:execute()
end

---点击气泡
function distance_trigger:on_tap_bubble()
    local x
    local y
    local z
    if self.trigger_res_data.Type == 1 or self.trigger_res_data.Type == 3 then
        x = self.target_go.transform.position.x
        y = self.target_go.transform.position.y
        z = self.target_go.transform.position.z
    elseif self.trigger_res_data.Type == 2 then
        x = self.target_pos.x
        y = self.target_pos.y
        z = self.target_pos.z
    end
    if self.path_finding_offset then
        x = x + self.path_finding_offset.PositionX / 10000
        y = y + self.path_finding_offset.PositionY / 10000
        z = z + self.path_finding_offset.PositionZ / 10000
    end
    --hero_manager.start_path_finding(x, y, z, self.path_finding_callback_func)
    
    hero_manager.start_dynamic_path_finding(self.target_go, self.path_finding_callback_func, 2, string_keys.path_finding_txt_2)
end

---dispose
---@public
function distance_trigger:dispose()
    super.dispose(self)
    self:set_entry_visible(false)
    res.unload_asset(self.entry_texture)
    res.unload_instance(self.entry_go)
    self.path_finding_offset = nil
    self.target_go = nil
    self.target_pos = nil
    self.entry_texture = nil
    self.entry_go = nil
    self.entry = nil
end


return distance_trigger
