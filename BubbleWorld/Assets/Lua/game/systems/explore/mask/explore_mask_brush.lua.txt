---
--- Generated by libin
--- File name : explore_mask_brush.lua.txt
--- DataTime : 2022/10/31
--- Description : 
---

local GameObject = cs.GameObject
local ExploreMaskBrush = cs.ExploreMaskBrush
local string = string
local timer_mgr = timer_manager

---@class explore_mask_brush
local explore_mask_brush = class("explore_mask_brush")

--region base api

function explore_mask_brush:ctor()
    ---@type UnityEngine.GameObject
    self.obj = nil
    ---@type Game.Explore.ExploreMaskBrush
    self.cs_mask = nil
    
    ---@type explore_mask_brush_pool
    self.pool = nil
    
    self.timer_id = nil
    self.timer_id_2 = nil
    self.call_back = nil
end

---@public
function explore_mask_brush:dispose()
    self.obj = nil
    self.cs_mask = nil
    if nil ~= self.timer_id then
        timer_mgr.remove_timer(self.timer_id)
    end
    self.timer_id_2 = nil
    if nil ~= self.timer_id_2 then
        timer_mgr.remove_timer(self.timer_id_2)
    end
    self.timer_id_2 = nil
    self.pool = nil
    self.call_back = nil
end

--endregion

--region logic

---初始化
---@public
---@param obj UnityEngine.GameObject
---@param pool explore_mask_brush_pool
function explore_mask_brush:init(obj, pool)
    self.obj = obj
    self.pool = pool
    self.cs_mask = self.obj:GetComponent(typeof(ExploreMaskBrush))
end

---设置擦除
---@public
---@param unit explore_fade_mask_render_unit
function explore_mask_brush:set_mask_unit(unit)
    self.cs_mask:SetMaskUnit(unit.cs_unit)
end

---跟随连线
---@public
---@param start_id string
---@param end_id string
---@param call_back function
function explore_mask_brush:mask_follow_line(start_id, end_id, call_back)
    self.call_back = call_back
    local lst = game_data_manager.explore:get_prepare_move_line(start_id, end_id)
    local move_data = lst[1]
    if nil == move_data then
        log.error("Start Node : "..start_id.." | End Node : "..end_id.." Not Find Move Data")
        return
    end
    
    local end_name = game_data_manager.explore:get_explore_node_name_by_id(end_id)
    ---@type explore_fade_mask_render_unit
    local mask_unit = system_manager.explore:get_mask_render_unit(end_name)
    if nil ~= mask_unit then
        self:set_mask_unit(mask_unit)
        self.cs_mask:SplineFollow(move_data.computer, move_data.from, move_data.to, move_data.time * 1.5, move_data.direction)
        --相机跟随
        system_manager.explore.scene_render:camera_follow_line(move_data.computer, move_data.from, move_data.to, move_data.time * 1.5, move_data.direction)
        self.timer_id = timer_mgr.add_timer(move_data.time * 1.5, function()
            self:reset()
            self.pool:enqueue(self)
            self.timer_id = nil
            system_manager.explore.scene_render:reset_camera_follow_line()
            if nil ~= self.call_back then
                self.call_back()
                self.call_back = nil
            end
        end)

        self.timer_id_2 = timer_mgr.add_timer(move_data.time * 1.5 - 0.1, function()
            self.timer_id_2 = nil
            --连线动画完成事件
            system_manager.explore:play_node_active_effect(end_id)
        end)
    else
        log.error("Not Find Mask Render Unit : "..end_id)
    end
    
end

---@public
function explore_mask_brush:reset()
    self.cs_mask:ResetSplineFollow()
end

--endregion


return explore_mask_brush