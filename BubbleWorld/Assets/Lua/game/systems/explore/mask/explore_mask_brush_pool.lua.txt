---
--- Generated by libin
--- File name : explore_mask_brush_pool.lua.txt
--- DataTime : 2022/10/31
--- Description : 
---

local data = data
local tables = tables
local res = res
local explore_mask_brush = require "game/systems/explore/mask/explore_mask_brush"

---@class explore_mask_brush_pool
local explore_mask_brush_pool = class("explore_mask_brush_pool")

function explore_mask_brush_pool:ctor()
    self.objects = {}

    ---@type DeusFramework.Res.DfResLoader
    self.res_load = res.create_res_loader()
end

---入队
---@public
---@param mask_brush explore_mask_brush
function explore_mask_brush_pool:enqueue(mask_brush)
    array_table.insert(self.objects, mask_brush)
end

---出队
---@public
---@return explore_mask_brush
function explore_mask_brush_pool:dequeue()
    local size = #self.objects
    ---@type explore_mask_brush
    local mask_brush = nil
    if size > 0 then
        mask_brush = self.objects[size]
        self.objects[size] = nil
    else
        local asset_path = data.get(tables.ConstClient.name, tables.ConstClient.ids.KW_EXPLORE_MASK_BRUSH, tables.ConstClient.properties.String)
        ---@type UnityEngine.GameObject
        local obj = res.load_instance(asset_path, "ExploreMaskBrush", nil, self.res_load, nil)
        mask_brush = explore_mask_brush.new()
        mask_brush:init(obj, self)
    end
    
    return mask_brush
end

---@public
---@param is_destroy boolean
function explore_mask_brush_pool:dispose(is_destroy)
    local count = #self.objects
    for i = 1, count do
        ---@type explore_mask_brush
        local mask_brush = self.objects[i]
        res.unload_instance(mask_brush.obj, self.res_load)
        mask_brush:dispose()
        self.objects[i] = nil
    end

    if is_destroy then
        self.objects = nil
        self.res_load:Dispose()
        self.res_load = nil
    else
        self.objects = {}
    end
end


return explore_mask_brush_pool