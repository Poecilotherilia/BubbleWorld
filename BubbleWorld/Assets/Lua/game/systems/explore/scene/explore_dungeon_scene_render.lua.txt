---
--- Generated by libin
--- File name : explore_dungeon_scene_render.lua.txt
--- DataTime : 2023/03/16
--- Description : 探索材料副本场景渲染器
---

local render_unit = require "game/systems/explore/dungeon/explore_dungeon_monster_render_unit"
local tables = tables
local data = data
local res = res
local string = string
local GameObject = cs.GameObject
local message = message
---@type message_type
local message_type = enum.message_type
local CinemachineVirtualCamera = cs.CinemachineVirtualCamera
local model_show_camera_type = enum.common.model_show_camera_type
local array_table = array_table
local game_util = require "game/utils/game_util"
local CharacterLuaBehaviour = cs.CharacterLuaBehaviour

---@class explore_dungeon_scene_render
local explore_dungeon_scene_render = class("explore_dungeon_scene_render")

--region base api

---构造方法
---@protected
function explore_dungeon_scene_render:ctor()

    ---@type DeusFramework.Res.DfResLoader
    self.res_loader = res.create_res_loader()

    ---@type table<number, explore_dungeon_monster_render_unit>
    self.monster_render_unit_dict = {}
    
    ---@type UnityEngine.GameObject
    self.fake_boss_obj = nil
    
    ---@type UnityEngine.GameObject
    self.born_root = nil
    
    ---@type Cinemachine.CinemachineVirtualCamera
    self.boss_v_camera = nil
    ---@type number
    self.boss_camera_id = nil
    
    self:add_event()
    
    self.cur_load_count = 0
    self.total_load_count = 0
end

---清理
---@public
function explore_dungeon_scene_render:clear()
    for i, v in pairs(self.monster_render_unit_dict) do
        ---@type UnityEngine.GameObject
        local monster_obj = v:get_monster_obj()
        ---@type UnityEngine.GameObject
        local effect_obj = v:get_effect_obj()
        res.unload_instance(monster_obj, self.res_loader)
        if nil ~= effect_obj then
            res.unload_instance(effect_obj, self.res_loader)
        end
        v:dispose()
    end

    if nil ~= self.fake_boss_obj then
        res.unload_instance(self.fake_boss_obj, self.res_loader)
        self.fake_boss_obj = nil
    end
    
    self.monster_render_unit_dict = {}
    self.born_root = nil
    if nil ~= self.boss_v_camera and nil ~= self.boss_camera_id then
        camera_manager.remove_virtual_camera(self.boss_camera_id)
    end
    self.boss_v_camera = nil
    self.boss_camera_id = nil

    self.res_loader:Dispose()
    self.res_loader = res.create_res_loader()
end

function explore_dungeon_scene_render:dispose()
    self:del_event()
    self.fake_boss_obj = nil
    self.monster_render_unit_dict = nil
    self.res_loader:Dispose()
    self.res_loader = nil
    self.born_root = nil
    self.cur_load_count = nil
    self.total_load_count = nil
    if nil ~= self.boss_v_camera and nil ~= self.boss_camera_id then
        camera_manager.remove_virtual_camera(self.boss_camera_id)
    end
    self.boss_v_camera = nil
    self.boss_camera_id = nil
end

--endregion

--region event

function explore_dungeon_scene_render:add_event()
    message.add_listener(message_type.EXPLORE_DUNGEON_MONSTER_BORN_DONE, self.on_monster_born_done, self)
end

function explore_dungeon_scene_render:del_event()
    message.remove_listener(message_type.EXPLORE_DUNGEON_MONSTER_BORN_DONE, self.on_monster_born_done, self)
end

function explore_dungeon_scene_render:on_monster_born_done()
    self.cur_load_count =  self.cur_load_count + 1
    if self.cur_load_count == self.total_load_count then
        message.broadcast(message_type.EXPLORE_DUNGEON_MONSTER_BORN_ALL_DONE)
    end
end

--endregion

--region logic

---初始化
---@public
function explore_dungeon_scene_render:init_born_point()
    self.born_root = GameObject.Find("MonsterBornRoot")
    self.boss_v_camera = GameObject.Find("MonsterBornRoot/10/BossCamera"):GetComponent(typeof(CinemachineVirtualCamera))
    self.boss_camera_id = camera_manager.add_virtual_camera(self.boss_v_camera)
    ---@type table<number, record_row>
    local dict = game_data_manager.explore_dungeon:get_cur_dungeon_monster_dict()
    for i, v in pairs(dict) do
        local index = v:get_value(tables.Player.records.ExploreDungeonMonsters.columns.Index)
        index = tonumber(index)
        local name = tostring(index)
        local parent = self.born_root:FindChildObject(name)
        ---@type explore_dungeon_monster_render_unit
        local render = self.monster_render_unit_dict[index]
        if nil ~= render then
            render:set_born_point(parent)
        end
    end
end

---材料副本怪物加载
---@public
function explore_dungeon_scene_render:load_monster_sync()
    self.cur_load_count = 0
    self.total_load_count = 0
    local is_has_boss = game_data_manager.explore_dungeon:check_has_boss()
    
    --TODO 常驻boss处理
    self:load_fake_boss(is_has_boss)

    ---@type table<number, record_row>
    local dict = game_data_manager.explore_dungeon:get_cur_dungeon_monster_dict()
    for i, v in pairs(dict) do
        local flag = v:get_value(tables.Player.records.ExploreDungeonMonsters.columns.IsComplete)
        local index = v:get_value(tables.Player.records.ExploreDungeonMonsters.columns.Index)
        local battle_id = v:get_value(tables.Player.records.ExploreDungeonMonsters.columns.BattleId)

        local is_can_load = true
        if is_has_boss then
            if index == 10 then
                --boss模式boss加载二次判断
                local flag_monster = game_data_manager.explore_dungeon:dungeon_monster_is_play_anim(index, 2)
                if not flag_monster then
                    is_can_load = false
                end
            else
                --boss模式小怪加载二次判断
                local flag_monster = game_data_manager.explore_dungeon:dungeon_monster_is_play_anim(index, 2)
                if flag_monster then
                    is_can_load = false
                end
            end
        else
            is_can_load = flag == 0
        end
        
        if is_can_load then
            ---怪物            
            ---@type BTLBattle
            local battle = data.get(tables.BTLBattle.name, battle_id)
            local enemy_id = battle.EnemyData[1].Array[1]
            if string.is_nil_or_empty(enemy_id) then
                enemy_id = battle.EnemyData[1].Array[2]
                if string.is_nil_or_empty(enemy_id) then
                    enemy_id = battle.EnemyData[1].Array[3]
                    if string.is_nil_or_empty(enemy_id) then
                        enemy_id = battle.EnemyData[1].Array[4]
                    end
                end
            end
            
            local monster_id = data.get(tables.Enemy.name, enemy_id, tables.Enemy.properties.MonsterId)
            local res_id = data.get(tables.Monster.name, monster_id, tables.Monster.properties.RoleResIdData)
            ---@type RoleRes
            local res_data = data.get(tables.RoleRes.name, res_id)
            ---@type UnityEngine.GameObject
            local monster_obj = res.load_instance_sync(res_data.ModelPath, 
                    string.get_file_name_without_extension(res_data.ModelPath), 
                    nil, 
                    nil, 
                    self.res_loader, 
                    nil
            )

            --缩放
            local scale = res_data.Scale / 10000
            monster_obj:SetLocalScale(scale, scale, scale)

            ---@type explore_dungeon_monster_render_unit
            local render = render_unit.new(v, monster_obj, nil, res_data, self.res_loader)
            self.monster_render_unit_dict[index] = render

            self.total_load_count = self.total_load_count + 1
        end
    end
end

---播放出生表现
---@public
function explore_dungeon_scene_render:play_born_anim()
    ---@type Ident[]
    local lst = {}
    ---@type number[]
    local flag_lst = {}
    for i, v in pairs(self.monster_render_unit_dict) do
        v:play_born_anim()
        local uid = v:get_monster_id()
        local flag = v:get_monster_flag()
        --数据上死亡检测
        local dead_flag = v.monster_data:get_value(tables.Player.records.ExploreDungeonMonsters.columns.IsComplete)
        if dead_flag == 0 then
            flag = game_util.set_bit_flag(flag, 1, 1)
            array_table.insert(lst, uid)
            array_table.insert(flag_lst, flag)
        end
    end

    if #lst > 0 and #flag_lst > 0 then
        system_manager.explore.network:req_set_explore_dungeon_monster_play_anim_flag(lst, flag_lst)
    end
end

---获得怪物
---@public
---@return table<number, explore_dungeon_monster_render_unit>
function explore_dungeon_scene_render:get_monster_dict()
    return self.monster_render_unit_dict
end

---卸载怪物
---@public
---@param index
function explore_dungeon_scene_render:unload_monster(index)
    ---@type explore_dungeon_monster_render_unit
    local render = self.monster_render_unit_dict[index]
    if nil ~= render then
       
        res.unload_instance(render.monster_obj, self.res_loader)
        render:dispose()
        self.monster_render_unit_dict[index] = nil
    end
end

---怪物死亡
---@public
function explore_dungeon_scene_render:do_monster_dead()
    ---@type Ident[]
    local lst = {}
    ---@type number[]
    local flag_lst = {}
    for i, v in pairs(self.monster_render_unit_dict) do
        v:play_death_anim()
        ---@type Ident
        local uid = v:get_monster_id()
        local flag = v:get_monster_flag()
        flag = game_util.set_bit_flag(flag, 2, 1)
        array_table.insert(lst, uid)
        array_table.insert(flag_lst, flag)
    end
    
    system_manager.explore.network:req_set_explore_dungeon_monster_play_anim_flag(lst, flag_lst)
end

--endregion

--region boss

---加载boss
---@public
function explore_dungeon_scene_render:load_boss()
    lua.start_coroutine(function()
        self:hide_fake_boss()
        
        ---@type record_row
        local boss_row = game_data_manager.explore_dungeon:get_cur_dungeon_monster_data(10)
        if nil ~= boss_row then
            local battle_id = boss_row:get_value(tables.Player.records.ExploreDungeonMonsters.columns.BattleId)
            local index = boss_row:get_value(tables.Player.records.ExploreDungeonMonsters.columns.Index)
            
            ---怪物            
            ---@type BTLBattle
            local battle = data.get(tables.BTLBattle.name, battle_id)
            local enemy_id = battle.EnemyData[1].Array[1]
            if string.is_nil_or_empty(enemy_id) then
                enemy_id = battle.EnemyData[1].Array[2]
                if string.is_nil_or_empty(enemy_id) then
                    enemy_id = battle.EnemyData[1].Array[3]
                    if string.is_nil_or_empty(enemy_id) then
                        enemy_id = battle.EnemyData[1].Array[4]
                    end
                end
            end

            local monster_id = data.get(tables.Enemy.name, enemy_id, tables.Enemy.properties.MonsterId)
            local res_id = data.get(tables.Monster.name, monster_id, tables.Monster.properties.RoleResIdData)
            ---@type RoleRes
            local res_data = data.get(tables.RoleRes.name, res_id)
            --设置boss相机位置
            --self:update_camera_pos_and_rotate(res_id)
            ---@type UnityEngine.GameObject
            local monster_obj = res.load_instance_sync(res_data.ModelPath,
                    string.get_file_name_without_extension(res_data.ModelPath),
                    nil,
                    nil,
                    self.res_loader,
                    nil
            )

            --缩放
            local scale = res_data.Scale / 10000
            monster_obj:SetLocalScale(scale, scale, scale)

            ---@type explore_dungeon_monster_render_unit
            local render = render_unit.new(boss_row, monster_obj, nil, res_data, self.res_loader)
            self.monster_render_unit_dict[index] = render

            --出生位置设置
            local name = tostring(index)
            local parent = self.born_root:FindChildObject(name)
            render:set_born_point(parent)
            
            --播放出生动画
            render:play_born_anim()
            --播放出生特效
            ---@type ExploreDungeon
            local dungeon_data = game_data_manager.explore_dungeon.dungeon_data
            if not string.is_nil_or_empty(dungeon_data.BossBornEffect) then
                effect.play_effect_sync(dungeon_data.BossBornEffect, parent, 1)
            end
            
            --移动相机
            camera_manager.show_virtual_camera(self.boss_camera_id, 1, 0.3)
            
            --设置boss出生完成
            ---@type Ident
            local uid = boss_row:get_value(tables.Player.records.ExploreDungeonMonsters.columns.Id)
            local lst = {}
            local flag_lst = {}
            array_table.insert(lst, uid)
            array_table.insert(flag_lst, 6)
            system_manager.explore.network:req_set_explore_dungeon_monster_play_anim_flag(lst, flag_lst)
        end
    end)
end

---加载常驻boss
---@private
---@param is_has_boss boolean
function explore_dungeon_scene_render:load_fake_boss(is_has_boss)
    if is_has_boss then
        ---@type record_row
        local flag = game_data_manager.explore_dungeon:dungeon_monster_is_play_anim(10, 2)
        if flag then
            --播放过剧情不在加载
            return
        end
    end
    
    ---@type ExploreDungeon
    local dungeon_data = game_data_manager.explore_dungeon.dungeon_data
    ---@type RoleRes
    local res_data = data.get(tables.RoleRes.name, dungeon_data.BossRoleRes)
    if nil ~= res_data then
        self.fake_boss_obj = res.load_instance_sync(res_data.ModelPath,
                string.get_file_name_without_extension(res_data.ModelPath),
                nil,
                nil,
                self.res_loader,
                nil
        )
        
        --播放待机
        if nil ~= self.fake_boss_obj then
            ---@type Game.Behaviour.CharacterLuaBehaviour
            local monster_behaviour = self.fake_boss_obj:GetComponent(typeof(CharacterLuaBehaviour))
            local idle1_action_id = data.get(tables.ConstClient.name, tables.ConstClient.ids.KW_DUNGEON_MONSTER_ACTION_IDLE, tables.ConstClient.properties.String)
            local idle1_action_path = data.get(tables.Action.name, res_data[idle1_action_id], tables.Action.properties.Name)
            monster_behaviour:PlayAnimationAsync(idle1_action_path, 1, nil, self.res_loader, nil, 0.2)
        end
    end
end

---设置常驻boss出生点位
---@public
function explore_dungeon_scene_render:set_fake_boss_born_point()
    if nil ~= self.fake_boss_obj then
        local parent = self.born_root:FindChildObject("10")
        self.fake_boss_obj:SetParent(parent)
        self.fake_boss_obj:SetLocalPosition(0, 0, 0)
        self.fake_boss_obj:SetLocalRotation(0, 0, 0)
    end
end

---隐藏常驻boss
---@private
function explore_dungeon_scene_render:hide_fake_boss()
    if nil ~= self.fake_boss_obj then
        self.fake_boss_obj:SetActive(false)
    end
end

---设置boss相机位置
---@private
function explore_dungeon_scene_render:update_camera_pos_and_rotate(role_re_id)
    ---@type model_show_camera_data
    local mscd = data.get("ModelShowCamera", role_re_id);
    if nil ~= mscd then
        ---@type model_show_camera_attr
        local msca = mscd.CameraMap[model_show_camera_type.WITCH_DEFAULT]
        if nil ~= msca then
            local x1 = msca.CameraPosX / 10000
            local y1 = msca.CameraPosY / 10000
            local z1 = msca.CameraPosZ / 10000
            local x2 = msca.CameraRotX / 10000
            local y2 = msca.CameraRotY / 10000
            local z2 = msca.CameraRotZ / 10000
            local fov = msca.Fov
            
            self.boss_v_camera:SetLocalPosition(x1, y1, z1)
            self.boss_v_camera:SetLocalRotation(x2, y2, z2)
            local new_lens = self.boss_v_camera.m_Lens
            new_lens.FieldOfView = fov
            self.boss_v_camera.m_Lens = new_lens
        end
    end
end

--endregion

return explore_dungeon_scene_render
