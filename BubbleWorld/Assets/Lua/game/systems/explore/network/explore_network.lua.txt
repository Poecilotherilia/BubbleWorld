---
--- Generated by libin
--- File name : explore_network.lua.txt
--- DataTime : 2022/07/14
--- Description : 探索网络协议
---

local message = message
---@type message_type
local message_type = enum.message_type
local net_mgr = network
local message_names = message_names
local enum_proto = enum.proto
local EGameMsgID = enum_proto.EGameMsgID
local EGameEventCode = enum_proto.EGameEventCode
local game = game
local tables = tables
local window = window
local item_title_type = enum.common.item_title_type
local data = data

---@class explore_network
local explore_network = class("explore_network")

--region base api

---构造方法
---@protected
function explore_network:ctor()
    self:add_listener()
end

---@public
function explore_network:dispose()
    self:remove_listener()
end


--endregion

--region listener

function explore_network:add_listener()
    net_mgr.add_message_listener(EGameMsgID.ACK_EXPLORE_UPDATE_NODE_POSTION, message_names.AckExploreUpdateNodePostion, self.on_ack_explore_update_node_pos, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_SWEEP_EXPLORE_THREE_STAR_NODE, message_names.AckSweepExploreThreeStarNode, self.on_ack_sweep_explore_three_star_node, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_GET_EXPLORE_AREA_PROGRESS_REWARDS, message_names.AckGetExploreAreaProgressRewards, self.on_ack_get_explore_area_progress_rewards, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_GET_EXPLORE_MAP_PROGRESS_REWARDS, message_names.AckGetExploreMapProgressRewards, self.on_ack_get_explore_map_rewards, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_GET_EXPLORE_MISSION_REWARD, message_names.AckGetExploreMissionReward, self.on_ack_get_mission_reward, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_GET_EXPLORE_TREASURE_BOX_REWARDS, message_names.AckGetExploreTreasureBoxRewards, self.on_ack_get_explore_treasure_box_rewards, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_SET_EXPLORE_DUNGEON_MONSTER_FLGS, message_names.AckSetExploreDungeonMonsterFlgs, self.on_ack_set_explore_dungeon_monsters_play_anim_flag, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_SET_EXPLORE_DUNGEON_FLGS, message_names.AckSetExploreDungeonFlgs, self.on_ack_set_explore_dungeon_play_story_flag, self)
    net_mgr.add_message_listener(EGameMsgID.ACK_SET_EXPLORE_ELITE_FLGS, message_names.AckSetExploreEliteFlgs, self.on_ack_set_explore_elite_flag, self)
end

function explore_network:remove_listener()
    net_mgr.remove_message_listener(EGameMsgID.ACK_EXPLORE_UPDATE_NODE_POSTION, self.on_ack_explore_update_node_pos, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_SWEEP_EXPLORE_THREE_STAR_NODE, self.on_ack_sweep_explore_three_star_node, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_GET_EXPLORE_AREA_PROGRESS_REWARDS, self.on_ack_get_explore_area_progress_rewards, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_GET_EXPLORE_MAP_PROGRESS_REWARDS, self.on_ack_get_explore_map_rewards, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_GET_EXPLORE_MISSION_REWARD, self.on_ack_get_mission_reward, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_GET_EXPLORE_TREASURE_BOX_REWARDS, self.on_ack_get_explore_treasure_box_rewards, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_SET_EXPLORE_DUNGEON_MONSTER_FLGS, self.on_ack_set_explore_dungeon_monsters_play_anim_flag, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_SET_EXPLORE_DUNGEON_FLGS, self.on_ack_set_explore_dungeon_play_story_flag, self)
    net_mgr.remove_message_listener(EGameMsgID.ACK_SET_EXPLORE_ELITE_FLGS, self.on_ack_set_explore_elite_flag, self)
end



--endregion

--region ack

---稀有怪剧情Flag
---@private
---@param ack_info AckSetExploreEliteFlgs
function explore_network:on_ack_set_explore_elite_flag(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end

---材料副本怪物flag
---@private
---@param ack_info AckSetExploreDungeonMonsterFlgs
function explore_network:on_ack_set_explore_dungeon_monsters_play_anim_flag(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end

---材料副本剧情flag
---@private
---@param ack_info AckSetExploreDungeonFlgs
function explore_network:on_ack_set_explore_dungeon_play_story_flag(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end


---探索宝箱路点ack
---@private
---@param ack_info AckGetExploreAreaProgressRewards
function explore_network:on_ack_get_explore_treasure_box_rewards(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end

---探索任务奖励ack
---@private
---@param ack_info AckGetExploreMissionReward
function explore_network:on_ack_get_mission_reward(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then

    end
end

---完成节点
---@private
---@param ack_info AckCompleteExploreNode
function explore_network: on_ack_complete_explore_node(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        
    end
end

---节点位置刷新ack
---@private
---@param ack_info AckExploreUpdateNodePostion
function explore_network:on_ack_explore_update_node_pos(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        message.broadcast(message_type.EXPLORE_ACK_UPDATE_NODE_POSITION, ack_info.explore_node_id)
        system_manager.explore:on_ack_update_node(ack_info.explore_node_id)
    end
end

---扫荡ack
---@private
---@param ack_info AckSweepExploreThreeStarNode
function explore_network:on_ack_sweep_explore_three_star_node(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
    end
end

---区域奖励ack
---@private
---@param ack_info AckGetExploreAreaProgressRewards
function explore_network:on_ack_get_explore_area_progress_rewards(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        message.broadcast(message_type.EXPLORE_ACK_GET_EXPLORE_AREA_REWARDS)
        --TODO:红点检测
        red_point_manager.explore:check_red_point()
    end
end

---主线奖励ack
---@private
---@param ack_info AckGetExploreMapProgressRewards
function explore_network:on_ack_get_explore_map_rewards(ack_info)
    if ack_info.event_code == EGameEventCode.SUCCESS then
        --通知探索UI主线奖励宝箱刷新
        message.broadcast(message_type.EXPLORE_ACK_GET_EXPLORE_MAP_REWARDS)
        --TODO:红点检测
        red_point_manager.explore:check_red_point()
    end
end


--endregion

--region req

---请求稀有怪剧情Flag设置
---@public
---@param elite_id string
---@param flag number
function explore_network:req_set_explore_elite_flag(elite_id, flag)
    ---@type ReqSetExploreEliteFlgs
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_elite_id = elite_id
    req.flgs = flag
    
    net_mgr.send_message_async(EGameMsgID.REQ_SET_EXPLORE_ELITE_FLGS, message_names.ReqSetExploreEliteFlgs, req)
end


---请求材料副本怪物动作完成
---@public
---@param monster_ids Ident[]
---@param flags number[]
function explore_network:req_set_explore_dungeon_monster_play_anim_flag(monster_ids, flags)
    ---@type ReqSetExploreDungeonMonsterFlgs
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.monster_ids = monster_ids
    req.flgs = flags
    
    net_mgr.send_message_async(EGameMsgID.REQ_SET_EXPLORE_DUNGEON_MONSTER_FLGS, message_names.ReqSetExploreDungeonMonsterFlgs, req)
end


---请求设置剧情完成
---@public
---@param dungeon_id string
function explore_network:req_set_explore_dungeon_play_story_flag(dungeon_id)
    ---@type ReqSetExploreDungeonFlgs
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_dungeon_id = dungeon_id
    req.flgs = 1
    
    net_mgr.send_message_async(EGameMsgID.REQ_SET_EXPLORE_DUNGEON_FLGS, message_names.ReqSetExploreDungeonFlgs, req)
end

---请求更新节点位置
---@public
---@param node_id string
function explore_network:req_explore_update_node_pos(node_id)
    ---@type ReqExploreUpdateNodePostion
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_node_id = node_id

    net_mgr.send_message_async(EGameMsgID.REQ_EXPLORE_UPDATE_NODE_POSTION, message_names.ReqExploreUpdateNodePostion, req)
end

---请求扫荡
---@public
---@param node_id string
---@param sweep_count number
function explore_network:req_sweep_explore_three_star_node(node_id, sweep_count)
    ---@type ReqSweepExploreThreeStarNode
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_node_id = node_id
    req.sweep_count = sweep_count

    net_mgr.send_message_async(EGameMsgID.REQ_SWEEP_EXPLORE_THREE_STAR_NODE, message_names.ReqSweepExploreThreeStarNode, req)
end

---请求区域奖励
---@public
---@param area_id string
---@param target_count number
function explore_network:req_get_explore_area_progress_rewards(area_id, target_count)
    ---@type ReqGetExploreAreaProgressRewards
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_area_id = area_id
    req.target = target_count

    net_mgr.send_message_async(EGameMsgID.REQ_GET_EXPLORE_AREA_PROGRESS_REWARDS, message_names.ReqGetExploreAreaProgressRewards, req)
end

---请求主线奖励
---@public
---@param chapter_id string
---@param target_count number
function explore_network:req_get_explore_map_reward(chapter_id, target_count)
    ---@type ReqGetExploreMapProgressRewards
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.target = target_count
    req.explore_map_id = chapter_id

    net_mgr.send_message_async(EGameMsgID.REQ_GET_EXPLORE_MAP_PROGRESS_REWARDS, message_names.ReqGetExploreMapProgressRewards, req)
end

---请求路点完成
---@public
---@param
function explore_network:req_complete_explore_node(node_id)
    ---@type ReqCompleteExploreNode
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_node_id = node_id

    net_mgr.send_message_async(EGameMsgID.REQ_COMPLETE_EXPLORE_NODE, message_names.ReqCompleteExploreNode, req)
end

---剧情播放完成
---@public
---@param story_ids string[]
function explore_network:sync_explore_node_story_progress(story_ids)
    ---@type SyncExploreNodeStoryProgress
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.module_ids = story_ids
    
    net_mgr.send_message_async(EGameMsgID.SYNC_EXPLORE_NODE_STORY_PROGRESS, message_names.SyncExploreNodeStoryProgress, req)
end

---请求探索任务奖励
---@public
---@param mission_id string
function explore_network:req_get_explore_mission_reward(mission_id)
    ---@type ReqGetExploreMissionReward
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.mission_id = mission_id

    net_mgr.send_message_async(EGameMsgID.REQ_GET_EXPLORE_MISSION_REWARD, message_names.ReqGetExploreMissionReward, req)
end

---请求宝箱路线
---@public
---@param node_id string
function explore_network:req_get_explore_treasure_box_rewards(node_id)
    ---@type ReqGetExploreTreasureBoxRewards
    local req = {}
    req.player_id = game_data_manager.player.player_net_obj:get_id()
    req.explore_node_id = node_id
    
    net_mgr.send_message_async(EGameMsgID.REQ_GET_EXPLORE_TREASURE_BOX_REWARDS, message_names.ReqGetExploreTreasureBoxRewards, req)
end

--endregion



return explore_network