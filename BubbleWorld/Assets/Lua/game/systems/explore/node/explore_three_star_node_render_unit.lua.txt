---
--- Generated by libin
--- File name : explore_three_star_node_render_unit.lua.txt
--- DataTime : 2022/10/18
--- Description : 探索节点渲染器-三星
---

local star_controller = require "game/windows/common/star_controller"

local super = require "game/systems/explore/node/explore_node_render_unit"

---@class explore_three_star_node_render_unit : explore_node_render_unit
local explore_three_star_node_render_unit = class("explore_three_star_node_render_unit", super)

--region base api

---构造方法
---@protected
---@param cs_node_unit Game.Explore.ExploreNodeUnit
---@param node_data explore_node_data
function explore_three_star_node_render_unit:ctor(cs_node_unit, node_data)
    super.ctor(self, cs_node_unit, node_data)
    
    ---@type boolean
    self.is_lock = nil
    ---@type UnityEngine.GameObject
    self.star_root = nil
    ---@type star_controller
    self.star_ctrl = nil
end

---@public
function explore_three_star_node_render_unit:dispose()
    super.dispose(self)
    self.is_lock = nil
    if nil ~= self.star_ctrl then
        self.star_ctrl:dispose()
    end
    self.star_ctrl = nil
    self.star_root = nil
end

---初始化绑定器
---@protected override
function explore_three_star_node_render_unit:init_binding()
    super.init_binding(self)
    self:create_simple_property("is_lock", false, true)
    self:create_simple_property("is_new", nil, true)
end

---获得CS传入的游戏对象上挂载的脚本
---@protected override
function explore_three_star_node_render_unit:init_component()
    super.init_component(self)
    
    self.star_root = self:get_object("star_root")
    if nil ~= self.star_root then
        self.star_ctrl = star_controller.new(self.star_root, 0)
    else
        local name = self.node_data:get_node_name()
        log.error(name.." 's star_root not find")
    end
end

--endregion

--region logic

---显示列表元素
---@protected override
function explore_three_star_node_render_unit:show_item()
    super.show_item(self)
    
    --星级
    local star_count = game_data_manager.battle_record:get_star_count(self.node_data.node.Id)
    if nil ~= star_count then
        self.star_ctrl:update_star(star_count)
    end
end

--endregion



return explore_three_star_node_render_unit
