---
--- Generated by libin
--- File name : explore_transmit_node_render_unit.lua.txt
--- DataTime : 2022/10/19
--- Description : 探索节点渲染器-传送
---

local super = require "game/systems/explore/node/explore_node_render_unit"

---@class explore_transmit_node_render_unit : explore_node_render_unit
local explore_transmit_node_render_unit = class("explore_transmit_node_render_unit", super)

--region base api

---构造方法
---@protected
---@param cs_node_unit Game.Explore.ExploreNodeUnit
---@param node_data explore_node_data
function explore_transmit_node_render_unit:ctor(cs_node_unit, node_data)
    super.ctor(self, cs_node_unit, node_data)

    ---@type boolean
    self.is_lock = nil
    self.effect_id = nil
end

---@public
function explore_transmit_node_render_unit:dispose()
    super.dispose(self)

    self.is_lock = nil
    if nil ~= self.effect_id then
        effect.manual_unload_effect(self.effect_id)
        self.effect_id = nil
    end
end

---初始化绑定器
---@protected override
function explore_transmit_node_render_unit:init_binding()
    super.init_binding(self)

    self:create_simple_property("is_lock", false, true)
    self:create_simple_property("is_new", nil, true)
end

---获得CS传入的游戏对象上挂载的脚本
---@protected override
function explore_transmit_node_render_unit:init_component()
    
end

--endregion

--region logic

---显示列表元素
---@protected override
function explore_transmit_node_render_unit:show_item()
    super.show_item(self)
end

---刷新Item
---@public
function explore_transmit_node_render_unit:update_item()
    if self.node_data.state <= 0 then
        self.is_lock = true
    else
        self.is_lock = false
    end
end

---设置节点显/隐
---@protected override
---@param is_active boolean
function explore_transmit_node_render_unit:set_active(is_active)
    self.cs_unit:SetActive(is_active)
    if self.node_data.state <= 0 then
        self.is_lock = true
    else
        self.is_lock = false
    end
end

---@public
function explore_transmit_node_render_unit:play_active_effect()
    if not string.is_nil_or_empty(self.node_data.node.Effect) then
        self.effect_id = effect.play_effect_async(self.node_data.node.Effect, self.obj, 1)
    end
end


--endregion

return explore_transmit_node_render_unit
