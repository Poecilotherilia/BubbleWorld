---
--- Generated by libin
--- File name : explore_building_render_unit.lua.txt
--- DataTime : 2023/05/10
--- Description : 探索建筑物渲染器
--- 

local tables = tables
local data = data
local string = string
local DfEffect = cs.Effect

---@class explore_building_render_unit
local explore_building_render_unit = class("explore_building_render_unit")

--region base api

---构造方法
---@protected
---@param cs_unit Game.Explore.ExploreBuilding
---@param id string
---@param state number
function explore_building_render_unit:ctor(cs_unit, id, state)
    ---@type Game.Explore.ExploreBuilding
    self.cs_unit = cs_unit
    ---@type UnityEngine.GameObject
    self.obj = self.cs_unit.gameObject
    ---@type string
    self.building_id = id
    ---@type number
    self.cur_state = state
    
    ---@type ExploreChange
    self.change_data = data.get(tables.ExploreChange.name, id)
    
    self:default_state()
end

---@public
function explore_building_render_unit:dispose()
    self.cs_unit = nil
    self.obj = nil
    self.building_id = nil
    self.cur_state = nil
    self.change_data = nil
end

--endregion

--region logic

---变换到数据当前默认的状态
---@private
function explore_building_render_unit:default_state()
    ---@type ExploreChangeResource
    local resource = self:get_change_resource(self.cur_state)
    if nil ~= resource then
        ---@type base_change_logic
        local logic = system_manager.explore:get_dynamic_change_logic(resource.ChangeType)
        if nil ~= logic then
            logic:do_default_change(self.cur_state, self)
        else
            log.error("[Explore] Dynamic Change Log, not find default logic! | default_state : " .. self.cur_state .. " | building_id : " .. self.building_id.." | logic : "..resource.ChangeType)
        end
    else
        log.error("[Explore] Dynamic Change Log, Do Default State Fail, building_id : "..self.building_id.." | default_state : "..self.cur_state)
    end
end

---进行动态变换
---@public
---@param state number
function explore_building_render_unit:change_state(state)
    if self.cur_state ~= state then
        local last_state = self.cur_state
        self.cur_state = state

        ---@type ExploreChangeResource
        local resource = self:get_change_resource(self.cur_state)
        if nil ~= resource then
            ---@type base_change_logic
            local logic = system_manager.explore:get_dynamic_change_logic(resource.ChangeType)
            if nil ~= logic then
                logic:do_change(last_state, self.cur_state, self)
            else
                log.error("[Explore] Dynamic Change Log, not find target logic! | default_state : " .. self.cur_state .. " | building_id : " .. self.building_id.." | logic : "..resource.ChangeType)
            end
        else
            log.error("[Explore] Dynamic Change Log, do change state fail, building_id : "..self.building_id.." | target_state : "..self.cur_state)
        end
    end
end

---立即动态变换
---@param state number
function explore_building_render_unit:change_state_immediately(state)
    if self.cur_state ~= state then
        local last_state = self.cur_state
        self.cur_state = state

        ---@type ExploreChangeResource
        local resource = self:get_change_resource(self.cur_state)
        if nil ~= resource then
            ---@type base_change_logic
            local logic = system_manager.explore:get_dynamic_change_logic(resource.ChangeType)
            if nil ~= logic then
                logic:do_change_immediately(last_state, self.cur_state, self)
            else
                log.error("[Explore] Dynamic Change Log, not find target logic! | default_state : " .. self.cur_state .. " | building_id : " .. self.building_id.." | logic : "..resource.ChangeType)
            end
        else
            log.error("[Explore] Dynamic Change Log, do change state immediately fail, building_id : "..self.building_id.." | target_state : "..self.cur_state)
        end
        
    end
end

---获得变换资源数据
---@public
---@param state number
---@return ExploreChangeResource
function explore_building_render_unit:get_change_resource(state)
    if nil == self.change_data then
        return nil
    end
    
    if state == 0 then
        local id_0 = self.change_data.StateAsse0
        if not string.is_nil_or_empty(id_0) then
            ---@type ExploreChangeResource
            local resource = data.get(tables.ExploreChangeResource.name, id_0)
            return resource
        end
    end

    if state == 1 then
        local id_1 = self.change_data.StateAsse1
        if not string.is_nil_or_empty(id_1) then
            ---@type ExploreChangeResource
            local resource = data.get(tables.ExploreChangeResource.name, id_1)
            return resource
        end
    end

    if state == 2 then
        local id_2 = self.change_data.StateAsse2
        if not string.is_nil_or_empty(id_2) then
            ---@type ExploreChangeResource
            local resource = data.get(tables.ExploreChangeResource.name, id_2)
            return resource
        end
    end

    if state == 3 then
        local id_3 = self.change_data.StateAsse3
        if not string.is_nil_or_empty(id_3) then
            ---@type ExploreChangeResource
            local resource = data.get(tables.ExploreChangeResource.name, id_3)
            return resource
        end
    end
    
    return nil
end

---获得变换根节点
---@public
---@param state number
---@return UnityEngine.GameObject
function explore_building_render_unit:get_state_root(state)
    return self.cs_unit:GetStateRoot(state)
end

---获得变换资源
---@public
---@param state number
---@return UnityEngine.GameObject
function explore_building_render_unit:get_state_asset_obj(state)
    return self.cs_unit:GetStateAssetObj(state)
end

---设置变换根节点显隐
---@public
---@param state number
---@param is_active boolean
function explore_building_render_unit:set_state_root_active(state, is_active)
    ---@type UnityEngine.GameObject 
    local root = self:get_state_root(state)
    if nil ~= root then
        root:SetActive(is_active)
    end
end

---变换特效资源操作
---@public
---@param state number
---@param is_play boolean
function explore_building_render_unit:state_effect_asset_opt(state, is_play)
    ---@type UnityEngine.GameObject
    local asset_obj = self:get_state_asset_obj(state)
    if nil ~= asset_obj then
        ---@type DeusFramework.Effect.DfEffect
        local state_effect = asset_obj:GetComponent(typeof(DfEffect))
        if nil ~= state_effect then
            if is_play then
                state_effect:Play(1)
            else
                state_effect:Stop()
            end            
        end
    end
end

---获得过渡特效比方节点       
---@public
---@return UnityEngine.GameObject
function explore_building_render_unit:get_effect_root()
    return self.cs_unit.EffectRoot
end

---获得世界坐标
---@public
---@return number, number, number
function explore_building_render_unit:get_position()
    return self.obj:GetPosition()
end

--endregion


return explore_building_render_unit
