---
--- Generated by libin
--- File name : base_change_logic.lua.txt
--- DataTime : 2023/05/08
--- Description : 探索场景动态变换逻辑基类
---

local timer_mgr = timer_manager

---@class base_change_logic
local base_change_logic = class("base_change_logic")

--region base api

---构造方法
---@protected
function base_change_logic:ctor()
    ---@type number
    self.delay_timer_id = nil
    
    ---@type number
    self.duration_timer_id = nil
    
end

---@public
function base_change_logic:dispose()
    if nil ~= self.delay_timer_id then
        timer_mgr.remove_timer(self.delay_timer_id)
        self.delay_timer_id = nil
    end

    if nil ~= self.duration_timer_id then
        timer_mgr.remove_timer(self.duration_timer_id)
        self.duration_timer_id = nil
    end
end

--endregion

--region logic

---当前默认变换（一般用于场景初始化）
---@public
---@param state number
---@param render explore_building_render_unit
function base_change_logic:do_default_change(state, render)
    
end

---进行变换
---@public
---@param last_state number
---@param new_state number
---@param render explore_building_render_unit
function base_change_logic:do_change(last_state, new_state, render)
    
end

---立即变换
---@public
---@param last_state number
---@param new_state number
---@param render explore_building_render_unit
function base_change_logic:do_change_immediately(last_state, new_state, render)
    
end

---关闭变换
---@public
---@param state number
---@param render explore_building_render_unit
function base_change_logic:do_close(state, render)
    
end

---获得一些数据
---@public
---@param last_state number
---@param new_state number
---@param render explore_building_render_unit
---@return ExploreChangeResource, base_change_logic, ExploreChangeResource
function base_change_logic:get_some_data(last_state, new_state, render)
    --上一个状态的数据
    ---@type ExploreChangeResource
    local last_resource_data = render:get_change_resource(last_state)
    if nil == last_resource_data then
        log.error("[Explore] Dynamic Change Log, not find last state data ! | last_state : " .. last_state .. " | building_id : " .. render.building_id)
    end
    ---@type base_change_logic
    local last_logic = system_manager.explore:get_dynamic_change_logic(last_resource_data.ChangeType)
    if nil == last_logic then
        log.error("[Explore] Dynamic Change Log, not find last logic! | last_state : " .. last_state .. " | building_id : " .. render.building_id.." | logic : "..last_resource_data.ChangeType)
    end

    --当前状态数据
    ---@type ExploreChangeResource
    local new_resource_data = render:get_change_resource(new_state)
    if nil == new_resource_data then
        log.error("[Explore] Dynamic Change Log, not find new state data ! | new_state : " .. new_state .. " | building_id : " .. render.building_id)
    end
    
    return last_resource_data, last_logic, new_resource_data
end

---过度特效位置刷新
---@public
---@param root UnityEngine.GameObject
---@param resource_data ExploreChangeResource
function base_change_logic:update_effect_offset_pos(root, resource_data)
    ---@type number[]
    local pos = resource_data.ChangeEffectLocation
    local x = pos[1]
    local z = pos[2]
    
    if nil == x then
        x = 0
    else
        x = x / 10000
    end

    if nil == z then
        z = 0
    else
        z = z / 10000
    end
    
    root:SetLocalPosition(x, 0, z)
end

--endregion

return base_change_logic