---
--- Generated by libin
--- File name : explore_base_story.lua.txt
--- DataTime : 2023/07/04
--- Description : 
---

local message = message
---@type message_type
local message_type = enum.message_type
local data = data
local tables = tables
local explore_node_event_type = enum.experience.explore_node_event_type
local explore_node_extend_type = enum.experience.explore_node_extend_type


---@class explore_base_story
local explore_base_story = class("explore_base_story")

--region base api

function explore_base_story:ctor(ctrl)
    ---@type explore_story_controller
    self.ctrl = ctrl
end

function explore_base_story:dispose()
    self.ctrl = nil
end

--endregion

--region logic

---检查播放路点开始剧情
---@public
---@param node_id string
---@param call_back function
function explore_base_story:check_node_start_story(node_id, call_back)
    ---@type explore_node_data
    local node_data = game_data_manager.explore:get_explore_node_data_by_id(node_id)
    ---宝箱路点有自己的剧情流程这里屏蔽掉
    if node_data.node.EventType == explore_node_event_type.BOX then
        return
    end

    --TODO:屏蔽稀有怪
    if node_data.is_extend and node_data.extend_type == explore_node_extend_type.RARE then
        return
    end

    local str_arr = node_data.node.NodeStartStory
    if nil ~= str_arr and #str_arr > 0 then

        ----播放剧情时禁止一切操作
        --message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, false)
        --system_manager.explore:set_can_drag_camera(false)
        --system_manager.story:start_explorer_story(str_arr, nil, false, function()
        --    --设置剧情完成
        --    system_manager.explore.network:sync_explore_node_story_progress(node_data.node.NodeStartStory)
        --    --播放剧情完成恢复操作
        --    message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, true)
        --    system_manager.explore:set_can_drag_camera(true)
        --    if nil ~= call_back then
        --        call_back()
        --    end
        --end)
        
        
        if node_data.is_arrived == 0 then
            --播放剧情时禁止一切操作
            message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, false)
            system_manager.explore:set_can_drag_camera(false)
            system_manager.story:start_explorer_story(str_arr, nil, false, function()
                --设置剧情完成
                system_manager.explore.network:sync_explore_node_story_progress(node_data.node.NodeStartStory)
                --播放剧情完成恢复操作
                message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, true)
                system_manager.explore:set_can_drag_camera(true)
                if nil ~= call_back then
                    call_back()
                end
            end)
        else
            --任务路点有自己的剧情表现逻辑，所以这里要过滤掉
            if node_data.node.EventType == explore_node_event_type.TASK then
                goto continue
            end
            if nil ~= call_back then
                call_back()
            end
            :: continue ::
        end
    else
        if nil ~= call_back then
            call_back()
        end
    end
end

---是否能播放后端剧情
---@public
---@param call_back function
function explore_base_story:check_node_end_story(call_back)
    ---@type explore_node_data
    local story_node = self.ctrl:get_end_story_node()
    ---宝箱路点有自己的剧情流程这里屏蔽掉
    if nil ~= story_node and story_node.node.EventType == explore_node_event_type.BOX then
        return
    end      
    
    --TODO:屏蔽稀有怪
    if nil ~= story_node and story_node.is_extend and story_node.extend_type == explore_node_extend_type.RARE then
        return
    end
    
    local chapter_id = system_manager.explore.cur_chapter_id
    if nil ~= story_node then
        --章节信息相同
        if story_node.map.Id == chapter_id then
            local node_id = game_data_manager.explore:get_cur_map_pos(chapter_id)
            ---@type explore_node_data
            local node_data = game_data_manager.explore:get_explore_node_data_by_id(node_id)
            if story_node.node.Id == node_id then
                local str_arr = node_data.node.NodeEndStory
                if nil ~= str_arr and #str_arr > 0 then
                    --播放剧情时禁止一切操作
                    message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, false)
                    system_manager.explore:set_can_drag_camera(false)
                    system_manager.story:start_explorer_story(str_arr, nil, false, function()
                        --设置剧情完成
                        system_manager.explore.network:sync_explore_node_story_progress(node_data.node.NodeStartStory)
                        --播放剧情完成恢复操作
                        message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, true)
                        system_manager.explore:set_can_drag_camera(true)
                        if nil ~= call_back then
                            call_back()
                        end
                    end)
                    self.ctrl:set_end_story_node(nil)
                else
                    self.ctrl:set_end_story_node(nil)
                    if nil ~= call_back then
                        call_back()
                    end
                end
            else
                self.ctrl:set_end_story_node(nil)
                if nil ~= call_back then
                    call_back()
                end
            end
        else
            self.ctrl:set_end_story_node(nil)
            if nil ~= call_back then
                call_back()
            end
        end
    else
        if nil ~= call_back then
            call_back()
        end
    end
end

--endregion

return explore_base_story
