---
--- Generated by libin
--- File name : explore_box_story.lua.txt
--- DataTime : 2023/07/24
--- Description : 
---

local message = message
---@type message_type
local message_type = enum.message_type
local data = data
local tables = tables
local explore_node_event_type = enum.experience.explore_node_event_type

local super = require "game/systems/explore/story/explore_base_story"

---@class explore_box_story : explore_base_story
local explore_box_story = class("explore_box_story", super)

--region base api

function explore_box_story:ctor(ctrl)
    super.ctor(self, ctrl)
end

function explore_box_story:dispose()
    super.dispose(self)
end

--endregion

--region logic

---检查播放路点开始剧情
---@public
---@param node_id string
---@param call_back function
function explore_box_story:check_node_start_story(node_id, call_back)
    ---@type explore_node_data
    local node_data = game_data_manager.explore:get_explore_node_data_by_id(node_id)
    if node_data.node.EventType == explore_node_event_type.BOX then
        local str_arr = node_data.node.NodeStartStory
        if nil ~= str_arr and #str_arr > 0 then
            if node_data.is_arrived == 0 then
                --播放剧情时禁止一切操作
                message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, false)
                system_manager.explore:set_can_drag_camera(false)
                system_manager.story:start_explorer_story(str_arr, nil, false, function()
                    --设置剧情完成
                    system_manager.explore.network:sync_explore_node_story_progress(node_data.node.NodeStartStory)
                    --播放剧情完成恢复操作
                    message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, true)
                    system_manager.explore:set_can_drag_camera(true)
                    if nil ~= call_back then
                        call_back()
                    end
                    self:after_start_story(node_data)
                end)
            else
                if nil ~= call_back then
                    call_back()
                end
                self:after_start_story(node_data)
            end
        else
            if nil ~= call_back then
                call_back()
            end
            self:after_start_story(node_data)
        end
    end
end

---前段剧情之后
---@private
---@param node_data explore_node_data
function explore_box_story:after_start_story(node_data)
    if node_data.state == 1 then
        local flag = game_data_manager.explore_box:is_done(node_data.node.EventParam)
        if not flag then
            --请求领取奖励
            system_manager.explore.network:req_get_explore_treasure_box_rewards(node_data.node.Id)
        end
    end
end

---是否能播放后端剧情
---@public
---@param call_back function
function explore_box_story:check_node_end_story(call_back)
    ---@type explore_node_data
    local story_node = self.ctrl:get_end_story_node()
    if nil ~= story_node and story_node.node.EventType == explore_node_event_type.BOX then
        local chapter_id = system_manager.explore.cur_chapter_id
        --章节信息相同
        if story_node.map.Id == chapter_id then
            local node_id = game_data_manager.explore:get_cur_map_pos(chapter_id)
            ---@type explore_node_data
            local node_data = game_data_manager.explore:get_explore_node_data_by_id(node_id)
            if story_node.node.Id == node_id then
                local str_arr = node_data.node.NodeEndStory
                if nil ~= str_arr and #str_arr > 0 then
                    --播放剧情时禁止一切操作
                    message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, false)
                    system_manager.explore:set_can_drag_camera(false)
                    system_manager.story:start_explorer_story(str_arr, nil, false, function()
                        --设置剧情完成
                        system_manager.explore.network:sync_explore_node_story_progress(node_data.node.NodeStartStory)
                        --播放剧情完成恢复操作
                        message.broadcast(message_type.EXPLORE_IS_CAN_FINGER, true)
                        system_manager.explore:set_can_drag_camera(true)
                        if nil ~= call_back then
                            call_back()
                        end
                        self:after_end_story(story_node)
                    end)
                    self.ctrl:set_end_story_node(nil)
                else
                    self.ctrl:set_end_story_node(nil)
                    if nil ~= call_back then
                        call_back()
                    end
                    self:after_end_story(story_node)
                end
            else
                self.ctrl:set_end_story_node(nil)
                if nil ~= call_back then
                    call_back()
                end
                self:after_end_story(story_node)
            end
        else
            self.ctrl:set_end_story_node(nil)
            if nil ~= call_back then
                call_back()
            end
            self:after_end_story(story_node)
        end
    end
end

---后端剧情剧情之后
---@private
---@param node_data explore_node_data
function explore_box_story:after_end_story(node_data)
    system_manager.explore:check_node_and_mask_render_unit()
    system_manager.explore:play_new_node_anim()
end

--endregion

return explore_box_story
